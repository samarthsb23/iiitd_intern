// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_mul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_mul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_mul::ap_const_logic_0 = sc_dt::Log_0;
const bool operator_mul::ap_const_boolean_1 = true;
const bool operator_mul::ap_const_boolean_0 = false;

operator_mul::operator_mul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    MUSIC_top_fsub_32kbM_U295 = new MUSIC_top_fsub_32kbM<1,4,32,32,32>("MUSIC_top_fsub_32kbM_U295");
    MUSIC_top_fsub_32kbM_U295->clk(ap_clk);
    MUSIC_top_fsub_32kbM_U295->reset(ap_rst);
    MUSIC_top_fsub_32kbM_U295->din0(m1_reg_104);
    MUSIC_top_fsub_32kbM_U295->din1(m2_reg_109);
    MUSIC_top_fsub_32kbM_U295->ce(grp_fu_36_ce);
    MUSIC_top_fsub_32kbM_U295->dout(grp_fu_36_p2);
    MUSIC_top_fadd_32lbW_U296 = new MUSIC_top_fadd_32lbW<1,4,32,32,32>("MUSIC_top_fadd_32lbW_U296");
    MUSIC_top_fadd_32lbW_U296->clk(ap_clk);
    MUSIC_top_fadd_32lbW_U296->reset(ap_rst);
    MUSIC_top_fadd_32lbW_U296->din0(m3_reg_114);
    MUSIC_top_fadd_32lbW_U296->din1(m4_reg_119);
    MUSIC_top_fadd_32lbW_U296->ce(grp_fu_40_ce);
    MUSIC_top_fadd_32lbW_U296->dout(grp_fu_40_p2);
    MUSIC_top_fmul_32mb6_U297 = new MUSIC_top_fmul_32mb6<1,2,32,32,32>("MUSIC_top_fmul_32mb6_U297");
    MUSIC_top_fmul_32mb6_U297->clk(ap_clk);
    MUSIC_top_fmul_32mb6_U297->reset(ap_rst);
    MUSIC_top_fmul_32mb6_U297->din0(rhs_re_read_int_reg);
    MUSIC_top_fmul_32mb6_U297->din1(x_complex_float_re_read_int_reg);
    MUSIC_top_fmul_32mb6_U297->ce(grp_fu_44_ce);
    MUSIC_top_fmul_32mb6_U297->dout(grp_fu_44_p2);
    MUSIC_top_fmul_32mb6_U298 = new MUSIC_top_fmul_32mb6<1,2,32,32,32>("MUSIC_top_fmul_32mb6_U298");
    MUSIC_top_fmul_32mb6_U298->clk(ap_clk);
    MUSIC_top_fmul_32mb6_U298->reset(ap_rst);
    MUSIC_top_fmul_32mb6_U298->din0(rhs_im_read_int_reg);
    MUSIC_top_fmul_32mb6_U298->din1(x_complex_float_im_read_int_reg);
    MUSIC_top_fmul_32mb6_U298->ce(grp_fu_50_ce);
    MUSIC_top_fmul_32mb6_U298->dout(grp_fu_50_p2);
    MUSIC_top_fmul_32mb6_U299 = new MUSIC_top_fmul_32mb6<1,2,32,32,32>("MUSIC_top_fmul_32mb6_U299");
    MUSIC_top_fmul_32mb6_U299->clk(ap_clk);
    MUSIC_top_fmul_32mb6_U299->reset(ap_rst);
    MUSIC_top_fmul_32mb6_U299->din0(rhs_im_read_int_reg);
    MUSIC_top_fmul_32mb6_U299->din1(x_complex_float_re_read_int_reg);
    MUSIC_top_fmul_32mb6_U299->ce(grp_fu_56_ce);
    MUSIC_top_fmul_32mb6_U299->dout(grp_fu_56_p2);
    MUSIC_top_fmul_32mb6_U300 = new MUSIC_top_fmul_32mb6<1,2,32,32,32>("MUSIC_top_fmul_32mb6_U300");
    MUSIC_top_fmul_32mb6_U300->clk(ap_clk);
    MUSIC_top_fmul_32mb6_U300->reset(ap_rst);
    MUSIC_top_fmul_32mb6_U300->din0(rhs_re_read_int_reg);
    MUSIC_top_fmul_32mb6_U300->din1(x_complex_float_im_read_int_reg);
    MUSIC_top_fmul_32mb6_U300->ce(grp_fu_62_ce);
    MUSIC_top_fmul_32mb6_U300->dout(grp_fu_62_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_return_0);
    sensitive << ( grp_fu_36_p2 );
    sensitive << ( ap_ce_reg );
    sensitive << ( ap_return_0_int_reg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( grp_fu_40_p2 );
    sensitive << ( ap_ce_reg );
    sensitive << ( ap_return_1_int_reg );

    SC_METHOD(thread_grp_fu_36_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    SC_METHOD(thread_grp_fu_40_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    SC_METHOD(thread_grp_fu_44_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    SC_METHOD(thread_grp_fu_50_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    SC_METHOD(thread_grp_fu_56_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    SC_METHOD(thread_grp_fu_62_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce_reg );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_mul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, x_complex_float_re_read, "(port)x_complex_float_re_read");
    sc_trace(mVcdFile, x_complex_float_im_read, "(port)x_complex_float_im_read");
    sc_trace(mVcdFile, rhs_re_read, "(port)rhs_re_read");
    sc_trace(mVcdFile, rhs_im_read, "(port)rhs_im_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, grp_fu_44_p2, "grp_fu_44_p2");
    sc_trace(mVcdFile, m1_reg_104, "m1_reg_104");
    sc_trace(mVcdFile, grp_fu_50_p2, "grp_fu_50_p2");
    sc_trace(mVcdFile, m2_reg_109, "m2_reg_109");
    sc_trace(mVcdFile, grp_fu_56_p2, "grp_fu_56_p2");
    sc_trace(mVcdFile, m3_reg_114, "m3_reg_114");
    sc_trace(mVcdFile, grp_fu_62_p2, "grp_fu_62_p2");
    sc_trace(mVcdFile, m4_reg_119, "m4_reg_119");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_fu_36_p2, "grp_fu_36_p2");
    sc_trace(mVcdFile, grp_fu_40_p2, "grp_fu_40_p2");
    sc_trace(mVcdFile, grp_fu_36_ce, "grp_fu_36_ce");
    sc_trace(mVcdFile, grp_fu_40_ce, "grp_fu_40_ce");
    sc_trace(mVcdFile, grp_fu_44_ce, "grp_fu_44_ce");
    sc_trace(mVcdFile, grp_fu_50_ce, "grp_fu_50_ce");
    sc_trace(mVcdFile, grp_fu_56_ce, "grp_fu_56_ce");
    sc_trace(mVcdFile, grp_fu_62_ce, "grp_fu_62_ce");
    sc_trace(mVcdFile, ap_ce_reg, "ap_ce_reg");
    sc_trace(mVcdFile, x_complex_float_re_read_int_reg, "x_complex_float_re_read_int_reg");
    sc_trace(mVcdFile, x_complex_float_im_read_int_reg, "x_complex_float_im_read_int_reg");
    sc_trace(mVcdFile, rhs_re_read_int_reg, "rhs_re_read_int_reg");
    sc_trace(mVcdFile, rhs_im_read_int_reg, "rhs_im_read_int_reg");
    sc_trace(mVcdFile, ap_return_0_int_reg, "ap_return_0_int_reg");
    sc_trace(mVcdFile, ap_return_1_int_reg, "ap_return_1_int_reg");
#endif

    }
}

operator_mul::~operator_mul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete MUSIC_top_fsub_32kbM_U295;
    delete MUSIC_top_fadd_32lbW_U296;
    delete MUSIC_top_fmul_32mb6_U297;
    delete MUSIC_top_fmul_32mb6_U298;
    delete MUSIC_top_fmul_32mb6_U299;
    delete MUSIC_top_fmul_32mb6_U300;
}

void operator_mul::thread_ap_clk_no_reset_() {
    ap_ce_reg = ap_ce.read();
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return_0_int_reg = grp_fu_36_p2.read();
        ap_return_1_int_reg = grp_fu_40_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce_reg.read(), ap_const_logic_1))) {
        m1_reg_104 = grp_fu_44_p2.read();
        m2_reg_109 = grp_fu_50_p2.read();
        m3_reg_114 = grp_fu_56_p2.read();
        m4_reg_119 = grp_fu_62_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        rhs_im_read_int_reg = rhs_im_read.read();
        rhs_re_read_int_reg = rhs_re_read.read();
        x_complex_float_im_read_int_reg = x_complex_float_im_read.read();
        x_complex_float_re_read_int_reg = x_complex_float_re_read.read();
    }
}

void operator_mul::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void operator_mul::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_ce_reg.read())) {
        ap_return_0 = ap_return_0_int_reg.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return_0 = grp_fu_36_p2.read();
    }
}

void operator_mul::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_ce_reg.read())) {
        ap_return_1 = ap_return_1_int_reg.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read())) {
        ap_return_1 = grp_fu_40_p2.read();
    }
}

void operator_mul::thread_grp_fu_36_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_36_ce = ap_const_logic_1;
    } else {
        grp_fu_36_ce = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_40_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_40_ce = ap_const_logic_1;
    } else {
        grp_fu_40_ce = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_44_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_44_ce = ap_const_logic_1;
    } else {
        grp_fu_44_ce = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_50_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_50_ce = ap_const_logic_1;
    } else {
        grp_fu_50_ce = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_56_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_56_ce = ap_const_logic_1;
    } else {
        grp_fu_56_ce = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_62_ce() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce_reg.read()))) {
        grp_fu_62_ce = ap_const_logic_1;
    } else {
        grp_fu_62_ce = ap_const_logic_0;
    }
}

}

