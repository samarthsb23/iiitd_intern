// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul_100_unopt_matrixmul_100_unopt,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.301000,HLS_SYN_LAT=3111204,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=0,HLS_SYN_FF=931,HLS_SYN_LUT=1294,HLS_VERSION=2024_2}" *)

module matrixmul_100_unopt (
        ap_clk,
        ap_rst_n,
        in_A_TDATA,
        in_A_TVALID,
        in_A_TREADY,
        in_A_TKEEP,
        in_A_TSTRB,
        in_A_TLAST,
        out_C_TDATA,
        out_C_TVALID,
        out_C_TREADY,
        out_C_TKEEP,
        out_C_TSTRB,
        out_C_TLAST
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_pp0_stage0 = 16'd4;
parameter    ap_ST_fsm_state5 = 16'd8;
parameter    ap_ST_fsm_state6 = 16'd16;
parameter    ap_ST_fsm_pp1_stage0 = 16'd32;
parameter    ap_ST_fsm_state9 = 16'd64;
parameter    ap_ST_fsm_state10 = 16'd128;
parameter    ap_ST_fsm_state11 = 16'd256;
parameter    ap_ST_fsm_pp2_stage0 = 16'd512;
parameter    ap_ST_fsm_pp2_stage1 = 16'd1024;
parameter    ap_ST_fsm_pp2_stage2 = 16'd2048;
parameter    ap_ST_fsm_state21 = 16'd4096;
parameter    ap_ST_fsm_state22 = 16'd8192;
parameter    ap_ST_fsm_pp3_stage0 = 16'd16384;
parameter    ap_ST_fsm_state26 = 16'd32768;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_A_TDATA;
input   in_A_TVALID;
output   in_A_TREADY;
input  [3:0] in_A_TKEEP;
input  [3:0] in_A_TSTRB;
input  [0:0] in_A_TLAST;
output  [31:0] out_C_TDATA;
output   out_C_TVALID;
input   out_C_TREADY;
output  [3:0] out_C_TKEEP;
output  [3:0] out_C_TSTRB;
output  [0:0] out_C_TLAST;

 reg    ap_rst_n_inv;
reg    in_A_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_grp1;
reg   [0:0] icmp_ln21_reg_713;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0_grp2;
reg   [0:0] icmp_ln30_reg_760;
reg    out_C_TDATA_blk_n;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln55_reg_893;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] icmp_ln55_reg_893_pp3_iter1_reg;
reg   [6:0] col_reg_228;
reg   [6:0] col_1_reg_239;
reg   [6:0] index_reg_261;
reg   [13:0] phi_mul3_reg_273;
reg   [31:0] res_reg_285;
reg   [6:0] col_3_reg_298;
reg   [13:0] phi_mul_load_reg_680;
wire    ap_CS_fsm_state2;
wire   [13:0] add_ln20_1_fu_338_p2;
reg   [13:0] add_ln20_1_reg_685;
wire   [0:0] icmp_ln20_fu_344_p2;
wire   [6:0] add_ln20_fu_350_p2;
reg   [6:0] add_ln20_reg_694;
wire   [0:0] icmp_ln21_fu_366_p2;
reg    ap_block_state4_pp0_stage0_iter1_grp1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln21_fu_372_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [13:0] add_ln25_fu_382_p2;
reg   [13:0] add_ln25_reg_722;
reg   [13:0] phi_mul1_load_reg_727;
wire    ap_CS_fsm_state6;
wire   [13:0] add_ln29_1_fu_410_p2;
reg   [13:0] add_ln29_1_reg_732;
wire   [0:0] icmp_ln29_fu_416_p2;
wire   [6:0] add_ln29_fu_422_p2;
reg   [6:0] add_ln29_reg_741;
wire   [0:0] icmp_ln30_fu_438_p2;
reg    ap_block_state8_pp1_stage0_iter1_grp2;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] add_ln30_fu_444_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [13:0] add_ln34_fu_454_p2;
reg   [13:0] add_ln34_reg_769;
reg   [13:0] phi_mul5_load_reg_774;
wire    ap_CS_fsm_state10;
wire   [13:0] add_ln40_1_fu_482_p2;
reg   [13:0] add_ln40_1_reg_779;
wire   [6:0] add_ln40_fu_494_p2;
reg   [6:0] add_ln40_reg_787;
wire   [0:0] icmp_ln41_fu_510_p2;
wire    ap_CS_fsm_state11;
wire   [6:0] add_ln41_fu_516_p2;
reg   [6:0] add_ln41_reg_810;
wire   [13:0] zext_ln49_fu_522_p1;
reg   [13:0] zext_ln49_reg_815;
reg   [13:0] output_C_addr_1_reg_820;
wire   [0:0] icmp_ln43_fu_544_p2;
reg   [0:0] icmp_ln43_reg_825;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln43_reg_825_pp2_iter1_reg;
reg   [0:0] icmp_ln43_reg_825_pp2_iter2_reg;
reg   [31:0] input_A_load_reg_839;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
reg    ap_enable_reg_pp2_iter0_reg;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] input_B_load_reg_844;
wire   [6:0] add_ln43_fu_574_p2;
reg   [6:0] add_ln43_reg_849;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_pp2_stage2_11001;
wire   [13:0] add_ln47_2_fu_580_p2;
reg   [13:0] add_ln47_2_reg_854;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] mul_reg_859;
wire   [31:0] grp_fu_309_p2;
reg    ap_enable_reg_pp2_iter2;
reg   [13:0] phi_mul7_load_reg_869;
wire    ap_CS_fsm_state22;
wire   [13:0] add_ln54_1_fu_592_p2;
reg   [13:0] add_ln54_1_reg_874;
wire   [0:0] icmp_ln54_fu_598_p2;
wire   [6:0] add_ln54_fu_604_p2;
reg   [6:0] add_ln54_reg_883;
wire   [0:0] cmp68_fu_610_p2;
reg   [0:0] cmp68_reg_888;
wire   [0:0] icmp_ln55_fu_616_p2;
reg    ap_block_state24_pp3_stage0_iter1;
reg    ap_block_state25_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [6:0] add_ln55_fu_622_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] out_element_last_fu_648_p2;
reg   [0:0] out_element_last_reg_907;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
wire    ap_block_pp2_stage2_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter1;
reg    ap_condition_pp2_exit_iter1_state16;
wire    regslice_both_out_C_V_data_V_U_apdone_blk;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state23;
wire   [31:0] input_A_q0;
wire   [31:0] input_B_q0;
wire   [31:0] output_C_q0;
reg   [6:0] col_2_reg_250;
wire   [0:0] icmp_ln40_fu_488_p2;
wire    ap_CS_fsm_state21;
reg   [6:0] ap_phi_mux_index_phi_fu_265_p4;
wire    ap_block_pp2_stage0;
reg   [13:0] ap_phi_mux_phi_mul3_phi_fu_277_p4;
reg   [31:0] ap_phi_mux_res_phi_fu_290_p4;
wire    ap_block_pp2_stage2;
wire   [63:0] zext_ln25_1_fu_387_p1;
wire   [63:0] zext_ln34_1_fu_459_p1;
wire   [63:0] zext_ln49_1_fu_531_p1;
wire   [63:0] zext_ln47_1_fu_559_p1;
wire   [63:0] zext_ln47_2_fu_569_p1;
wire   [63:0] zext_ln61_1_fu_637_p1;
reg   [13:0] phi_mul_fu_98;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state1;
reg   [6:0] row_fu_102;
reg   [13:0] phi_mul1_fu_118;
wire    ap_CS_fsm_state9;
reg   [6:0] row_1_fu_122;
reg   [13:0] phi_mul5_fu_126;
reg   [6:0] row_2_fu_130;
reg   [13:0] phi_mul7_fu_134;
wire    ap_CS_fsm_state26;
reg   [6:0] row_3_fu_138;
reg    ap_block_pp0_stage0_11001_grp1;
reg    ap_block_pp1_stage0_11001_grp2;
reg    ap_block_pp3_stage0_01001;
reg    input_A_we0_local;
wire   [31:0] local_stream_data_fu_391_p1;
reg    input_A_ce0_local;
reg   [13:0] input_A_address0_local;
reg    input_B_we0_local;
wire   [31:0] local_stream_data_1_fu_463_p1;
reg    input_B_ce0_local;
reg   [13:0] input_B_address0_local;
reg    output_C_we0_local;
reg    output_C_ce0_local;
reg   [13:0] output_C_address0_local;
wire    ap_block_pp0_stage0;
wire   [13:0] zext_ln25_fu_378_p1;
wire    ap_block_pp1_stage0;
wire   [13:0] zext_ln34_fu_450_p1;
wire   [13:0] add_ln49_fu_526_p2;
wire   [13:0] zext_ln47_fu_550_p1;
wire   [13:0] add_ln47_fu_554_p2;
wire   [13:0] add_ln47_1_fu_564_p2;
wire   [13:0] zext_ln61_fu_628_p1;
wire   [13:0] add_ln61_fu_632_p2;
wire   [0:0] icmp_ln63_fu_642_p2;
reg   [15:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_block_pp2_stage0_subdone;
wire    ap_block_pp2_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    regslice_both_in_A_V_data_V_U_apdone_blk;
wire   [31:0] in_A_TDATA_int_regslice;
wire    in_A_TVALID_int_regslice;
reg    in_A_TREADY_int_regslice;
wire    regslice_both_in_A_V_data_V_U_ack_in;
wire    regslice_both_in_A_V_keep_V_U_apdone_blk;
wire   [3:0] in_A_TKEEP_int_regslice;
wire    regslice_both_in_A_V_keep_V_U_vld_out;
wire    regslice_both_in_A_V_keep_V_U_ack_in;
wire    regslice_both_in_A_V_strb_V_U_apdone_blk;
wire   [3:0] in_A_TSTRB_int_regslice;
wire    regslice_both_in_A_V_strb_V_U_vld_out;
wire    regslice_both_in_A_V_strb_V_U_ack_in;
wire    regslice_both_in_A_V_last_V_U_apdone_blk;
wire   [0:0] in_A_TLAST_int_regslice;
wire    regslice_both_in_A_V_last_V_U_vld_out;
wire    regslice_both_in_A_V_last_V_U_ack_in;
wire   [31:0] out_C_TDATA_int_regslice;
reg    out_C_TVALID_int_regslice;
wire    out_C_TREADY_int_regslice;
wire    regslice_both_out_C_V_data_V_U_vld_out;
wire    regslice_both_out_C_V_keep_V_U_apdone_blk;
wire    regslice_both_out_C_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_C_V_keep_V_U_vld_out;
wire    regslice_both_out_C_V_strb_V_U_apdone_blk;
wire   [3:0] out_C_TSTRB_int_regslice;
wire    regslice_both_out_C_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_C_V_strb_V_U_vld_out;
wire    regslice_both_out_C_V_last_V_U_apdone_blk;
wire    regslice_both_out_C_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_C_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0_reg = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 phi_mul_fu_98 = 14'd0;
#0 row_fu_102 = 7'd0;
#0 phi_mul1_fu_118 = 14'd0;
#0 row_1_fu_122 = 7'd0;
#0 phi_mul5_fu_126 = 14'd0;
#0 row_2_fu_130 = 7'd0;
#0 phi_mul7_fu_134 = 14'd0;
#0 row_3_fu_138 = 7'd0;
end

matrixmul_100_unopt_input_A_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
input_A_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_address0_local),
    .ce0(input_A_ce0_local),
    .we0(input_A_we0_local),
    .d0(local_stream_data_fu_391_p1),
    .q0(input_A_q0)
);

matrixmul_100_unopt_input_A_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
input_B_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_address0_local),
    .ce0(input_B_ce0_local),
    .we0(input_B_we0_local),
    .d0(local_stream_data_1_fu_463_p1),
    .q0(input_B_q0)
);

matrixmul_100_unopt_input_A_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
output_C_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_C_address0_local),
    .ce0(output_C_ce0_local),
    .we0(output_C_we0_local),
    .d0(res_reg_285),
    .q0(output_C_q0)
);

matrixmul_100_unopt_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_phi_mux_res_phi_fu_290_p4),
    .din1(mul_reg_859),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

matrixmul_100_unopt_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(input_A_load_reg_839),
    .din1(input_B_load_reg_844),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_A_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TDATA),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_data_V_U_ack_in),
    .data_out(in_A_TDATA_int_regslice),
    .vld_out(in_A_TVALID_int_regslice),
    .ack_out(in_A_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_A_V_data_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_A_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TKEEP),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_keep_V_U_ack_in),
    .data_out(in_A_TKEEP_int_regslice),
    .vld_out(regslice_both_in_A_V_keep_V_U_vld_out),
    .ack_out(in_A_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_A_V_keep_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_A_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TSTRB),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_strb_V_U_ack_in),
    .data_out(in_A_TSTRB_int_regslice),
    .vld_out(regslice_both_in_A_V_strb_V_U_vld_out),
    .ack_out(in_A_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_A_V_strb_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_A_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TLAST),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_last_V_U_ack_in),
    .data_out(in_A_TLAST_int_regslice),
    .vld_out(regslice_both_in_A_V_last_V_U_vld_out),
    .ack_out(in_A_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_A_V_last_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_C_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_C_TDATA_int_regslice),
    .vld_in(out_C_TVALID_int_regslice),
    .ack_in(out_C_TREADY_int_regslice),
    .data_out(out_C_TDATA),
    .vld_out(regslice_both_out_C_V_data_V_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_data_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_C_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_C_TVALID_int_regslice),
    .ack_in(regslice_both_out_C_V_keep_V_U_ack_in_dummy),
    .data_out(out_C_TKEEP),
    .vld_out(regslice_both_out_C_V_keep_V_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_keep_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_C_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_C_TSTRB_int_regslice),
    .vld_in(out_C_TVALID_int_regslice),
    .ack_in(regslice_both_out_C_V_strb_V_U_ack_in_dummy),
    .data_out(out_C_TSTRB),
    .vld_out(regslice_both_out_C_V_strb_V_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_strb_V_U_apdone_blk)
);

matrixmul_100_unopt_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_C_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_element_last_reg_907),
    .vld_in(out_C_TVALID_int_regslice),
    .ack_in(regslice_both_out_C_V_last_V_U_ack_in_dummy),
    .data_out(out_C_TLAST),
    .vld_out(regslice_both_out_C_V_last_V_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            if (((ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter1_state16))) begin
                ap_enable_reg_pp2_iter1 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state16) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state23))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln54_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state23)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln54_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln30_fu_438_p2 == 1'd0))) begin
        col_1_reg_239 <= add_ln30_fu_444_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd0))) begin
        col_1_reg_239 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        col_2_reg_250 <= add_ln41_reg_810;
    end else if (((icmp_ln40_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        col_2_reg_250 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln55_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_3_reg_298 <= add_ln55_fu_622_p2;
    end else if (((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln54_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        col_3_reg_298 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_fu_366_p2 == 1'd0))) begin
        col_reg_228 <= add_ln21_fu_372_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd0))) begin
        col_reg_228 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln43_reg_825 == 1'd0))) begin
        index_reg_261 <= add_ln43_reg_849;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
        index_reg_261 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd1))) begin
        phi_mul1_fu_118 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        phi_mul1_fu_118 <= add_ln29_1_reg_732;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln43_reg_825 == 1'd0))) begin
        phi_mul3_reg_273 <= add_ln47_2_reg_854;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
        phi_mul3_reg_273 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd1))) begin
        phi_mul5_fu_126 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd1))) begin
        phi_mul5_fu_126 <= add_ln40_1_reg_779;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        phi_mul7_fu_134 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        phi_mul7_fu_134 <= add_ln54_1_reg_874;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        phi_mul_fu_98 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        phi_mul_fu_98 <= add_ln20_1_reg_685;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln43_reg_825_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        res_reg_285 <= grp_fu_309_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd0))) begin
        res_reg_285 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd1))) begin
        row_1_fu_122 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        row_1_fu_122 <= add_ln29_reg_741;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd1))) begin
        row_2_fu_130 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd1))) begin
        row_2_fu_130 <= add_ln40_reg_787;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        row_3_fu_138 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        row_3_fu_138 <= add_ln54_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        row_fu_102 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_fu_102 <= add_ln20_reg_694;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln20_1_reg_685 <= add_ln20_1_fu_338_p2;
        add_ln20_reg_694 <= add_ln20_fu_350_p2;
        phi_mul_load_reg_680 <= phi_mul_fu_98;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln25_reg_722 <= add_ln25_fu_382_p2;
        icmp_ln21_reg_713 <= icmp_ln21_fu_366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln29_1_reg_732 <= add_ln29_1_fu_410_p2;
        add_ln29_reg_741 <= add_ln29_fu_422_p2;
        phi_mul1_load_reg_727 <= phi_mul1_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln34_reg_769 <= add_ln34_fu_454_p2;
        icmp_ln30_reg_760 <= icmp_ln30_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln40_1_reg_779 <= add_ln40_1_fu_482_p2;
        add_ln40_reg_787 <= add_ln40_fu_494_p2;
        phi_mul5_load_reg_774 <= phi_mul5_fu_126;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln41_reg_810 <= add_ln41_fu_516_p2;
        output_C_addr_1_reg_820 <= zext_ln49_1_fu_531_p1;
        zext_ln49_reg_815[6 : 0] <= zext_ln49_fu_522_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        add_ln43_reg_849 <= add_ln43_fu_574_p2;
        add_ln47_2_reg_854 <= add_ln47_2_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln54_1_reg_874 <= add_ln54_1_fu_592_p2;
        add_ln54_reg_883 <= add_ln54_fu_604_p2;
        cmp68_reg_888 <= cmp68_fu_610_p2;
        phi_mul7_load_reg_869 <= phi_mul7_fu_134;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln43_reg_825 <= icmp_ln43_fu_544_p2;
        icmp_ln43_reg_825_pp2_iter1_reg <= icmp_ln43_reg_825;
        icmp_ln43_reg_825_pp2_iter2_reg <= icmp_ln43_reg_825_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln55_reg_893 <= icmp_ln55_fu_616_p2;
        icmp_ln55_reg_893_pp3_iter1_reg <= icmp_ln55_reg_893;
        out_element_last_reg_907 <= out_element_last_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        input_A_load_reg_839 <= input_A_q0;
        input_B_load_reg_844 <= input_B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        mul_reg_859 <= grp_fu_314_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln21_fu_366_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln30_fu_438_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state16 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2) & (icmp_ln43_reg_825 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_616_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln43_reg_825 == 1'd0))) begin
        ap_phi_mux_index_phi_fu_265_p4 = add_ln43_reg_849;
    end else begin
        ap_phi_mux_index_phi_fu_265_p4 = index_reg_261;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln43_reg_825 == 1'd0))) begin
        ap_phi_mux_phi_mul3_phi_fu_277_p4 = add_ln47_2_reg_854;
    end else begin
        ap_phi_mux_phi_mul3_phi_fu_277_p4 = phi_mul3_reg_273;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln43_reg_825_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        ap_phi_mux_res_phi_fu_290_p4 = grp_fu_309_p2;
    end else begin
        ap_phi_mux_res_phi_fu_290_p4 = res_reg_285;
    end
end

always @ (*) begin
    if ((((icmp_ln30_reg_760 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_grp2) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln21_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_A_TDATA_blk_n = in_A_TVALID_int_regslice;
    end else begin
        in_A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln30_reg_760 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001_grp2) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln21_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_A_TREADY_int_regslice = 1'b1;
    end else begin
        in_A_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_address0_local = zext_ln47_1_fu_559_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_A_address0_local = zext_ln25_1_fu_387_p1;
    end else begin
        input_A_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        input_A_ce0_local = 1'b1;
    end else begin
        input_A_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_713 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_A_we0_local = 1'b1;
    end else begin
        input_A_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_address0_local = zext_ln47_2_fu_569_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_grp2) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        input_B_address0_local = zext_ln34_1_fu_459_p1;
    end else begin
        input_B_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001_grp2) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        input_B_ce0_local = 1'b1;
    end else begin
        input_B_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln30_reg_760 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001_grp2) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        input_B_we0_local = 1'b1;
    end else begin
        input_B_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln55_reg_893_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((icmp_ln55_reg_893 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        out_C_TDATA_blk_n = out_C_TREADY_int_regslice;
    end else begin
        out_C_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln55_reg_893 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_C_TVALID_int_regslice = 1'b1;
    end else begin
        out_C_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        output_C_address0_local = zext_ln61_1_fu_637_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_C_address0_local = output_C_addr_1_reg_820;
    end else begin
        output_C_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        output_C_ce0_local = 1'b1;
    end else begin
        output_C_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        output_C_we0_local = 1'b1;
    end else begin
        output_C_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln20_fu_344_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_fu_366_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_fu_366_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln29_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln30_fu_438_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln30_fu_438_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln40_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_fu_510_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state16) & (1'b1 == ap_CS_fsm_pp2_stage2)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state16) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state22 : begin
            if (((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln54_fu_598_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((regslice_both_out_C_V_data_V_U_apdone_blk == 1'b0) & (icmp_ln54_fu_598_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln55_fu_616_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln55_fu_616_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_1_fu_338_p2 = (phi_mul_fu_98 + 14'd100);

assign add_ln20_fu_350_p2 = (row_fu_102 + 7'd1);

assign add_ln21_fu_372_p2 = (col_reg_228 + 7'd1);

assign add_ln25_fu_382_p2 = (phi_mul_load_reg_680 + zext_ln25_fu_378_p1);

assign add_ln29_1_fu_410_p2 = (phi_mul1_fu_118 + 14'd100);

assign add_ln29_fu_422_p2 = (row_1_fu_122 + 7'd1);

assign add_ln30_fu_444_p2 = (col_1_reg_239 + 7'd1);

assign add_ln34_fu_454_p2 = (phi_mul1_load_reg_727 + zext_ln34_fu_450_p1);

assign add_ln40_1_fu_482_p2 = (phi_mul5_fu_126 + 14'd100);

assign add_ln40_fu_494_p2 = (row_2_fu_130 + 7'd1);

assign add_ln41_fu_516_p2 = (col_2_reg_250 + 7'd1);

assign add_ln43_fu_574_p2 = (index_reg_261 + 7'd1);

assign add_ln47_1_fu_564_p2 = (ap_phi_mux_phi_mul3_phi_fu_277_p4 + zext_ln49_reg_815);

assign add_ln47_2_fu_580_p2 = (phi_mul3_reg_273 + 14'd100);

assign add_ln47_fu_554_p2 = (phi_mul5_load_reg_774 + zext_ln47_fu_550_p1);

assign add_ln49_fu_526_p2 = (phi_mul5_fu_126 + zext_ln49_fu_522_p1);

assign add_ln54_1_fu_592_p2 = (phi_mul7_fu_134 + 14'd100);

assign add_ln54_fu_604_p2 = (row_3_fu_138 + 7'd1);

assign add_ln55_fu_622_p2 = (col_3_reg_298 + 7'd1);

assign add_ln61_fu_632_p2 = (phi_mul7_load_reg_869 + zext_ln61_fu_628_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1_grp1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1_grp1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter1_grp1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state8_pp1_stage0_iter1_grp2));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_grp2 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state8_pp1_stage0_iter1_grp2));
end

assign ap_block_pp1_stage0_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state8_pp1_stage0_iter1_grp2));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_block_state25_pp3_stage0_iter2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp3_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_block_state25_pp3_stage0_iter2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp3_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_block_state25_pp3_stage0_iter2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp3_stage0_iter1)));
end

always @ (*) begin
    ap_block_state24_pp3_stage0_iter1 = ((icmp_ln55_reg_893 == 1'd0) & (out_C_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp3_stage0_iter2 = ((icmp_ln55_reg_893_pp3_iter1_reg == 1'd0) & (out_C_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1_grp1 = ((in_A_TVALID_int_regslice == 1'b0) & (icmp_ln21_reg_713 == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1_grp2 = ((in_A_TVALID_int_regslice == 1'b0) & (icmp_ln30_reg_760 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp68_fu_610_p2 = ((row_3_fu_138 == 7'd99) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_344_p2 = ((row_fu_102 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_366_p2 = ((col_reg_228 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_416_p2 = ((row_1_fu_122 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_438_p2 = ((col_1_reg_239 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_488_p2 = ((row_2_fu_130 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_510_p2 = ((col_2_reg_250 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_544_p2 = ((ap_phi_mux_index_phi_fu_265_p4 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_598_p2 = ((row_3_fu_138 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_616_p2 = ((col_3_reg_298 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_642_p2 = ((col_3_reg_298 == 7'd99) ? 1'b1 : 1'b0);

assign in_A_TREADY = regslice_both_in_A_V_data_V_U_ack_in;

assign local_stream_data_1_fu_463_p1 = in_A_TDATA_int_regslice;

assign local_stream_data_fu_391_p1 = in_A_TDATA_int_regslice;

assign out_C_TDATA_int_regslice = output_C_q0;

assign out_C_TSTRB_int_regslice = 'bx;

assign out_C_TVALID = regslice_both_out_C_V_data_V_U_vld_out;

assign out_element_last_fu_648_p2 = (icmp_ln63_fu_642_p2 & cmp68_reg_888);

assign zext_ln25_1_fu_387_p1 = add_ln25_reg_722;

assign zext_ln25_fu_378_p1 = col_reg_228;

assign zext_ln34_1_fu_459_p1 = add_ln34_reg_769;

assign zext_ln34_fu_450_p1 = col_1_reg_239;

assign zext_ln47_1_fu_559_p1 = add_ln47_fu_554_p2;

assign zext_ln47_2_fu_569_p1 = add_ln47_1_fu_564_p2;

assign zext_ln47_fu_550_p1 = ap_phi_mux_index_phi_fu_265_p4;

assign zext_ln49_1_fu_531_p1 = add_ln49_fu_526_p2;

assign zext_ln49_fu_522_p1 = col_2_reg_250;

assign zext_ln61_1_fu_637_p1 = add_ln61_fu_632_p2;

assign zext_ln61_fu_628_p1 = col_3_reg_298;

always @ (posedge ap_clk) begin
    zext_ln49_reg_815[13:7] <= 7'b0000000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "matrixmul_100_unopt_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //matrixmul_100_unopt

