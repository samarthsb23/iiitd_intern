// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul_5,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.670000,HLS_SYN_LAT=275,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=16,HLS_SYN_FF=2775,HLS_SYN_LUT=3914,HLS_VERSION=2019_2}" *)

module matrixmul_5 (
        ap_clk,
        ap_rst_n,
        in_A_TDATA,
        in_A_TVALID,
        in_A_TREADY,
        in_A_TLAST,
        out_C_TDATA,
        out_C_TVALID,
        out_C_TREADY,
        out_C_TLAST
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state6 = 9'd4;
parameter    ap_ST_fsm_pp1_stage0 = 9'd8;
parameter    ap_ST_fsm_state11 = 9'd16;
parameter    ap_ST_fsm_pp2_stage0 = 9'd32;
parameter    ap_ST_fsm_state17 = 9'd64;
parameter    ap_ST_fsm_pp3_stage0 = 9'd128;
parameter    ap_ST_fsm_state24 = 9'd256;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_A_TDATA;
input   in_A_TVALID;
output   in_A_TREADY;
input  [0:0] in_A_TLAST;
output  [31:0] out_C_TDATA;
output   out_C_TVALID;
input   out_C_TREADY;
output  [0:0] out_C_TLAST;

reg in_A_TREADY;

 reg    ap_rst_n_inv;
reg    in_A_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln289_fu_740_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln299_fu_1060_p2;
reg    out_C_TDATA_blk_n;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln325_reg_2461;
reg   [0:0] icmp_ln325_reg_2461_pp3_iter3_reg;
reg    ap_enable_reg_pp3_iter5;
reg   [0:0] icmp_ln325_reg_2461_pp3_iter4_reg;
reg   [6:0] indvar_flatten_reg_595;
reg   [3:0] row_0_reg_606;
reg   [3:0] col_0_reg_617;
reg   [6:0] indvar_flatten19_reg_628;
reg   [3:0] row_1_reg_639;
reg   [3:0] col_1_reg_650;
reg   [6:0] indvar_flatten39_reg_661;
reg   [3:0] row_2_reg_672;
reg   [3:0] col_2_reg_683;
reg   [6:0] indvar_flatten51_reg_694;
reg   [3:0] row_3_reg_705;
reg   [3:0] col_3_reg_716;
reg   [31:0] reg_735;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] reg_735_pp0_iter1_reg;
reg   [31:0] reg_735_pp1_iter1_reg;
reg    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln289_reg_2134;
reg   [0:0] icmp_ln289_reg_2134_pp0_iter1_reg;
wire   [6:0] add_ln289_fu_746_p2;
wire   [3:0] select_ln295_1_fu_772_p3;
reg   [3:0] select_ln295_1_reg_2143;
reg   [3:0] select_ln295_1_reg_2143_pp0_iter1_reg;
reg   [3:0] select_ln295_1_reg_2143_pp0_iter2_reg;
wire   [2:0] trunc_ln203_fu_780_p1;
reg   [2:0] trunc_ln203_reg_2149;
reg   [2:0] trunc_ln203_reg_2149_pp0_iter1_reg;
reg   [2:0] trunc_ln203_reg_2149_pp0_iter2_reg;
wire   [3:0] col_fu_784_p2;
wire   [53:0] man_V_2_fu_842_p3;
reg   [53:0] man_V_2_reg_2158;
wire   [0:0] icmp_ln571_fu_850_p2;
reg   [0:0] icmp_ln571_reg_2163;
wire   [0:0] icmp_ln581_fu_862_p2;
reg   [0:0] icmp_ln581_reg_2169;
wire  signed [11:0] sh_amt_fu_880_p3;
reg  signed [11:0] sh_amt_reg_2175;
wire   [0:0] icmp_ln582_fu_888_p2;
reg   [0:0] icmp_ln582_reg_2182;
wire   [21:0] trunc_ln583_fu_894_p1;
reg   [21:0] trunc_ln583_reg_2188;
reg   [21:0] trunc_ln583_reg_2188_pp0_iter2_reg;
wire  signed [31:0] sext_ln581_fu_898_p1;
reg  signed [31:0] sext_ln581_reg_2194;
wire   [21:0] select_ln585_1_fu_1002_p3;
reg   [21:0] select_ln585_1_reg_2199;
wire   [0:0] and_ln603_fu_1021_p2;
reg   [0:0] and_ln603_reg_2204;
reg   [0:0] icmp_ln299_reg_2209;
reg   [0:0] icmp_ln299_reg_2209_pp1_iter1_reg;
wire   [6:0] add_ln299_fu_1066_p2;
wire   [3:0] select_ln203_fu_1084_p3;
reg   [3:0] select_ln203_reg_2218;
reg   [3:0] select_ln203_reg_2218_pp1_iter1_reg;
reg   [3:0] select_ln203_reg_2218_pp1_iter2_reg;
wire   [3:0] select_ln203_1_fu_1092_p3;
reg   [3:0] select_ln203_1_reg_2223;
wire   [2:0] trunc_ln203_1_fu_1100_p1;
reg   [2:0] trunc_ln203_1_reg_2228;
reg   [2:0] trunc_ln203_1_reg_2228_pp1_iter1_reg;
reg   [2:0] trunc_ln203_1_reg_2228_pp1_iter2_reg;
wire   [3:0] col_5_fu_1104_p2;
wire   [53:0] man_V_5_fu_1162_p3;
reg   [53:0] man_V_5_reg_2237;
wire   [0:0] icmp_ln571_1_fu_1170_p2;
reg   [0:0] icmp_ln571_1_reg_2242;
wire   [0:0] icmp_ln581_1_fu_1182_p2;
reg   [0:0] icmp_ln581_1_reg_2248;
wire  signed [11:0] sh_amt_1_fu_1200_p3;
reg  signed [11:0] sh_amt_1_reg_2254;
wire   [0:0] icmp_ln582_1_fu_1208_p2;
reg   [0:0] icmp_ln582_1_reg_2261;
wire   [21:0] trunc_ln583_1_fu_1214_p1;
reg   [21:0] trunc_ln583_1_reg_2267;
reg   [21:0] trunc_ln583_1_reg_2267_pp1_iter2_reg;
wire  signed [31:0] sext_ln581_1_fu_1218_p1;
reg  signed [31:0] sext_ln581_1_reg_2273;
wire   [21:0] select_ln585_3_fu_1322_p3;
reg   [21:0] select_ln585_3_reg_2278;
wire   [0:0] and_ln603_1_fu_1341_p2;
reg   [0:0] and_ln603_1_reg_2283;
wire   [0:0] icmp_ln311_fu_1380_p2;
reg   [0:0] icmp_ln311_reg_2288;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state12_pp2_stage0_iter0;
wire    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_state14_pp2_stage0_iter2;
wire    ap_block_state15_pp2_stage0_iter3;
wire    ap_block_state16_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln311_reg_2288_pp2_iter1_reg;
reg   [0:0] icmp_ln311_reg_2288_pp2_iter2_reg;
reg   [0:0] icmp_ln311_reg_2288_pp2_iter3_reg;
wire   [6:0] add_ln311_fu_1386_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [3:0] select_ln318_fu_1404_p3;
reg   [3:0] select_ln318_reg_2297;
reg   [3:0] select_ln318_reg_2297_pp2_iter1_reg;
reg   [3:0] select_ln318_reg_2297_pp2_iter2_reg;
reg   [3:0] select_ln318_reg_2297_pp2_iter3_reg;
wire   [3:0] select_ln318_1_fu_1412_p3;
reg   [3:0] select_ln318_1_reg_2302;
reg   [3:0] select_ln318_1_reg_2302_pp2_iter1_reg;
reg   [3:0] select_ln318_1_reg_2302_pp2_iter2_reg;
reg   [3:0] select_ln318_1_reg_2302_pp2_iter3_reg;
wire   [63:0] zext_ln318_2_fu_1420_p1;
reg   [63:0] zext_ln318_2_reg_2308;
reg   [63:0] zext_ln318_2_reg_2308_pp2_iter1_reg;
wire   [63:0] zext_ln318_1_fu_1427_p1;
reg   [63:0] zext_ln318_1_reg_2332;
reg   [63:0] zext_ln318_1_reg_2332_pp2_iter1_reg;
wire   [3:0] col_4_fu_1434_p2;
wire   [31:0] mul_ln1192_fu_1466_p2;
reg   [31:0] mul_ln1192_reg_2376;
reg   [21:0] tmp_1_reg_2381;
wire   [31:0] mul_ln1192_1_fu_1486_p2;
reg   [31:0] mul_ln1192_1_reg_2386;
wire   [31:0] mul_ln1192_2_fu_1543_p2;
reg   [31:0] mul_ln1192_2_reg_2416;
reg   [21:0] tmp_5_reg_2421;
wire   [31:0] mul_ln1192_3_fu_1563_p2;
reg   [31:0] mul_ln1192_3_reg_2426;
wire   [31:0] mul_ln1192_4_fu_1573_p2;
reg   [31:0] mul_ln1192_4_reg_2431;
wire   [31:0] mul_ln1192_5_fu_1649_p2;
reg   [31:0] mul_ln1192_5_reg_2446;
reg   [21:0] tmp_12_reg_2451;
wire   [31:0] mul_ln1192_6_fu_1669_p2;
reg   [31:0] mul_ln1192_6_reg_2456;
wire   [0:0] icmp_ln325_fu_1746_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state18_pp3_stage0_iter0;
wire    ap_block_state19_pp3_stage0_iter1;
wire    ap_block_state20_pp3_stage0_iter2;
wire    ap_block_state21_pp3_stage0_iter3;
wire    ap_block_state22_pp3_stage0_iter4;
reg    ap_block_state22_io;
wire    ap_block_state23_pp3_stage0_iter5;
reg    ap_block_state23_io;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln325_reg_2461_pp3_iter1_reg;
reg   [0:0] icmp_ln325_reg_2461_pp3_iter2_reg;
wire   [6:0] add_ln325_fu_1752_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [3:0] select_ln329_1_fu_1778_p3;
reg   [3:0] select_ln329_1_reg_2470;
wire   [0:0] tmp_last_V_fu_1839_p2;
reg   [0:0] tmp_last_V_reg_2480;
reg   [0:0] tmp_last_V_reg_2480_pp3_iter1_reg;
reg   [0:0] tmp_last_V_reg_2480_pp3_iter2_reg;
reg   [0:0] tmp_last_V_reg_2480_pp3_iter3_reg;
wire   [3:0] col_6_fu_1845_p2;
wire   [0:0] icmp_ln935_fu_1851_p2;
reg   [0:0] icmp_ln935_reg_2490;
reg   [0:0] icmp_ln935_reg_2490_pp3_iter2_reg;
reg   [0:0] icmp_ln935_reg_2490_pp3_iter3_reg;
wire   [0:0] p_Result_14_fu_1857_p3;
reg   [0:0] p_Result_14_reg_2495;
reg   [0:0] p_Result_14_reg_2495_pp3_iter2_reg;
reg   [0:0] p_Result_14_reg_2495_pp3_iter3_reg;
wire   [21:0] tmp_V_4_fu_1871_p3;
reg   [21:0] tmp_V_4_reg_2500;
reg   [21:0] tmp_V_4_reg_2500_pp3_iter2_reg;
reg   [21:0] p_Result_s_fu_1879_p4;
reg   [21:0] p_Result_s_reg_2507;
wire   [31:0] sub_ln944_fu_1904_p2;
reg   [31:0] sub_ln944_reg_2512;
wire   [21:0] trunc_ln944_fu_1910_p1;
reg   [21:0] trunc_ln944_reg_2518;
wire   [31:0] lsb_index_fu_1914_p2;
reg   [31:0] lsb_index_reg_2523;
reg   [30:0] tmp_19_reg_2529;
wire   [4:0] sub_ln947_fu_1934_p2;
reg   [4:0] sub_ln947_reg_2534;
wire   [7:0] trunc_ln943_fu_1940_p1;
reg   [7:0] trunc_ln943_reg_2539;
reg   [7:0] trunc_ln943_reg_2539_pp3_iter3_reg;
reg   [30:0] m_5_reg_2544;
reg   [0:0] tmp_21_reg_2549;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_CS_fsm_state11;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
wire    ap_CS_fsm_state17;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state18;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg   [2:0] input_A_0_V_address0;
reg    input_A_0_V_ce0;
reg    input_A_0_V_we0;
wire   [21:0] input_A_0_V_q0;
reg   [2:0] input_A_1_V_address0;
reg    input_A_1_V_ce0;
reg    input_A_1_V_we0;
wire   [21:0] input_A_1_V_q0;
reg   [2:0] input_A_2_V_address0;
reg    input_A_2_V_ce0;
reg    input_A_2_V_we0;
wire   [21:0] input_A_2_V_q0;
reg   [2:0] input_A_3_V_address0;
reg    input_A_3_V_ce0;
reg    input_A_3_V_we0;
wire   [21:0] input_A_3_V_q0;
reg   [2:0] input_A_4_V_address0;
reg    input_A_4_V_ce0;
reg    input_A_4_V_we0;
wire   [21:0] input_A_4_V_q0;
reg   [2:0] input_A_5_V_address0;
reg    input_A_5_V_ce0;
reg    input_A_5_V_we0;
wire   [21:0] input_A_5_V_q0;
reg   [2:0] input_A_6_V_address0;
reg    input_A_6_V_ce0;
reg    input_A_6_V_we0;
wire   [21:0] input_A_6_V_q0;
reg   [2:0] input_A_7_V_address0;
reg    input_A_7_V_ce0;
reg    input_A_7_V_we0;
wire   [21:0] input_A_7_V_q0;
reg   [2:0] input_B_0_V_address0;
reg    input_B_0_V_ce0;
reg    input_B_0_V_we0;
wire   [21:0] input_B_0_V_q0;
reg   [2:0] input_B_1_V_address0;
reg    input_B_1_V_ce0;
reg    input_B_1_V_we0;
wire   [21:0] input_B_1_V_q0;
reg   [2:0] input_B_2_V_address0;
reg    input_B_2_V_ce0;
reg    input_B_2_V_we0;
wire   [21:0] input_B_2_V_q0;
reg   [2:0] input_B_3_V_address0;
reg    input_B_3_V_ce0;
reg    input_B_3_V_we0;
wire   [21:0] input_B_3_V_q0;
reg   [2:0] input_B_4_V_address0;
reg    input_B_4_V_ce0;
reg    input_B_4_V_we0;
wire   [21:0] input_B_4_V_q0;
reg   [2:0] input_B_5_V_address0;
reg    input_B_5_V_ce0;
reg    input_B_5_V_we0;
wire   [21:0] input_B_5_V_q0;
reg   [2:0] input_B_6_V_address0;
reg    input_B_6_V_ce0;
reg    input_B_6_V_we0;
wire   [21:0] input_B_6_V_q0;
reg   [2:0] input_B_7_V_address0;
reg    input_B_7_V_ce0;
reg    input_B_7_V_we0;
wire   [21:0] input_B_7_V_q0;
reg   [5:0] output_C_V_address0;
reg    output_C_V_ce0;
reg    output_C_V_we0;
wire   [21:0] output_C_V_d0;
wire   [21:0] output_C_V_q0;
reg   [3:0] ap_phi_mux_row_0_phi_fu_610_p4;
reg   [3:0] ap_phi_mux_row_1_phi_fu_643_p4;
reg   [3:0] ap_phi_mux_row_2_phi_fu_676_p4;
wire    ap_block_pp2_stage0;
reg   [3:0] ap_phi_mux_row_3_phi_fu_709_p4;
wire   [63:0] zext_ln295_fu_1027_p1;
wire   [63:0] zext_ln305_fu_1347_p1;
wire   [63:0] zext_ln203_1_fu_1695_p1;
wire   [63:0] zext_ln935_1_fu_1828_p1;
wire    ap_block_pp3_stage0_01001;
wire   [21:0] select_ln603_fu_1046_p3;
wire   [21:0] select_ln603_1_fu_1366_p3;
wire   [0:0] icmp_ln290_fu_758_p2;
wire   [3:0] row_fu_752_p2;
wire   [3:0] select_ln295_fu_764_p3;
wire   [63:0] grp_fu_727_p1;
wire   [63:0] ireg_V_fu_790_p1;
wire   [10:0] exp_tmp_V_fu_806_p4;
wire   [51:0] trunc_ln565_fu_820_p1;
wire   [52:0] tmp_4_fu_824_p3;
wire   [53:0] p_Result_11_fu_832_p1;
wire   [0:0] p_Result_10_fu_798_p3;
wire   [53:0] man_V_1_fu_836_p2;
wire   [62:0] trunc_ln556_fu_794_p1;
wire   [11:0] zext_ln461_fu_816_p1;
wire   [11:0] F2_fu_856_p2;
wire   [11:0] add_ln581_fu_868_p2;
wire   [11:0] sub_ln581_fu_874_p2;
wire   [53:0] zext_ln586_fu_911_p1;
wire   [53:0] ashr_ln586_fu_915_p2;
wire   [31:0] bitcast_ln696_fu_924_p1;
wire   [0:0] tmp_fu_928_p3;
wire   [0:0] xor_ln571_fu_944_p2;
wire   [0:0] and_ln582_fu_949_p2;
wire   [0:0] or_ln582_fu_961_p2;
wire   [0:0] xor_ln582_fu_965_p2;
wire   [0:0] icmp_ln585_fu_901_p2;
wire   [0:0] and_ln581_fu_971_p2;
wire   [0:0] xor_ln585_fu_976_p2;
wire   [0:0] and_ln585_fu_982_p2;
wire   [21:0] select_ln588_fu_936_p3;
wire   [21:0] select_ln582_fu_954_p3;
wire   [0:0] and_ln585_1_fu_996_p2;
wire   [21:0] trunc_ln586_fu_920_p1;
wire   [21:0] select_ln585_fu_988_p3;
wire   [0:0] or_ln581_fu_1010_p2;
wire   [0:0] icmp_ln603_fu_906_p2;
wire   [0:0] xor_ln581_fu_1015_p2;
wire   [21:0] sext_ln581cast_fu_1038_p1;
wire   [21:0] shl_ln604_fu_1041_p2;
wire   [0:0] icmp_ln300_fu_1078_p2;
wire   [3:0] row_4_fu_1072_p2;
wire   [63:0] ireg_V_1_fu_1110_p1;
wire   [10:0] exp_tmp_V_1_fu_1126_p4;
wire   [51:0] trunc_ln565_1_fu_1140_p1;
wire   [52:0] tmp_7_fu_1144_p3;
wire   [53:0] p_Result_13_fu_1152_p1;
wire   [0:0] p_Result_12_fu_1118_p3;
wire   [53:0] man_V_4_fu_1156_p2;
wire   [62:0] trunc_ln556_1_fu_1114_p1;
wire   [11:0] zext_ln461_1_fu_1136_p1;
wire   [11:0] F2_1_fu_1176_p2;
wire   [11:0] add_ln581_1_fu_1188_p2;
wire   [11:0] sub_ln581_1_fu_1194_p2;
wire   [53:0] zext_ln586_1_fu_1231_p1;
wire   [53:0] ashr_ln586_1_fu_1235_p2;
wire   [31:0] bitcast_ln696_1_fu_1244_p1;
wire   [0:0] tmp_16_fu_1248_p3;
wire   [0:0] xor_ln571_1_fu_1264_p2;
wire   [0:0] and_ln582_1_fu_1269_p2;
wire   [0:0] or_ln582_1_fu_1281_p2;
wire   [0:0] xor_ln582_1_fu_1285_p2;
wire   [0:0] icmp_ln585_1_fu_1221_p2;
wire   [0:0] and_ln581_1_fu_1291_p2;
wire   [0:0] xor_ln585_1_fu_1296_p2;
wire   [0:0] and_ln585_2_fu_1302_p2;
wire   [21:0] select_ln588_1_fu_1256_p3;
wire   [21:0] select_ln582_1_fu_1274_p3;
wire   [0:0] and_ln585_3_fu_1316_p2;
wire   [21:0] trunc_ln586_1_fu_1240_p1;
wire   [21:0] select_ln585_2_fu_1308_p3;
wire   [0:0] or_ln581_1_fu_1330_p2;
wire   [0:0] icmp_ln603_1_fu_1226_p2;
wire   [0:0] xor_ln581_1_fu_1335_p2;
wire   [21:0] sext_ln581_1cast_fu_1358_p1;
wire   [21:0] shl_ln604_1_fu_1361_p2;
wire   [0:0] icmp_ln312_fu_1398_p2;
wire   [3:0] row_5_fu_1392_p2;
wire  signed [21:0] mul_ln1118_fu_1456_p0;
wire  signed [21:0] mul_ln1118_fu_1456_p1;
wire  signed [21:0] mul_ln1192_fu_1466_p0;
wire  signed [21:0] mul_ln1192_fu_1466_p1;
wire   [31:0] mul_ln1118_fu_1456_p2;
wire  signed [21:0] mul_ln1192_1_fu_1486_p0;
wire  signed [21:0] mul_ln1192_1_fu_1486_p1;
wire   [31:0] shl_ln_fu_1504_p3;
wire   [31:0] add_ln1192_fu_1511_p2;
wire   [21:0] tmp_2_fu_1516_p4;
wire   [31:0] shl_ln728_1_fu_1526_p3;
wire  signed [21:0] mul_ln1192_2_fu_1543_p0;
wire  signed [21:0] mul_ln1192_2_fu_1543_p1;
wire   [31:0] add_ln1192_1_fu_1534_p2;
wire  signed [21:0] mul_ln1192_3_fu_1563_p0;
wire  signed [21:0] mul_ln1192_3_fu_1563_p1;
wire  signed [21:0] mul_ln1192_4_fu_1573_p0;
wire  signed [21:0] mul_ln1192_4_fu_1573_p1;
wire   [31:0] shl_ln728_2_fu_1587_p3;
wire   [31:0] add_ln1192_2_fu_1594_p2;
wire   [21:0] tmp_10_fu_1599_p4;
wire   [31:0] shl_ln728_3_fu_1609_p3;
wire   [31:0] add_ln1192_3_fu_1617_p2;
wire   [21:0] tmp_11_fu_1622_p4;
wire   [31:0] shl_ln728_4_fu_1632_p3;
wire  signed [21:0] mul_ln1192_5_fu_1649_p0;
wire  signed [21:0] mul_ln1192_5_fu_1649_p1;
wire   [31:0] add_ln1192_4_fu_1640_p2;
wire  signed [21:0] mul_ln1192_6_fu_1669_p0;
wire  signed [21:0] mul_ln1192_6_fu_1669_p1;
wire   [6:0] tmp_17_fu_1675_p3;
wire   [7:0] zext_ln203_fu_1686_p1;
wire   [7:0] zext_ln318_fu_1682_p1;
wire   [7:0] add_ln203_fu_1689_p2;
wire   [31:0] shl_ln728_5_fu_1700_p3;
wire   [31:0] add_ln1192_5_fu_1707_p2;
wire   [21:0] tmp_13_fu_1712_p4;
wire   [31:0] shl_ln728_6_fu_1722_p3;
wire   [31:0] add_ln1192_6_fu_1730_p2;
wire   [0:0] icmp_ln326_fu_1764_p2;
wire   [3:0] row_6_fu_1758_p2;
wire   [6:0] tmp_14_fu_1786_p3;
wire   [0:0] icmp_ln331_fu_1798_p2;
wire   [0:0] icmp_ln331_2_fu_1804_p2;
wire   [3:0] select_ln329_fu_1770_p3;
wire   [7:0] zext_ln331_fu_1794_p1;
wire   [7:0] zext_ln935_fu_1818_p1;
wire   [7:0] add_ln935_fu_1822_p2;
wire   [0:0] select_ln329_2_fu_1810_p3;
wire   [0:0] icmp_ln331_1_fu_1833_p2;
wire   [21:0] tmp_V_fu_1865_p2;
wire   [31:0] p_Result_15_fu_1889_p3;
reg   [31:0] l_fu_1896_p3;
wire   [4:0] trunc_ln947_fu_1930_p1;
wire   [21:0] zext_ln947_fu_1949_p1;
wire   [21:0] lshr_ln947_fu_1952_p2;
wire   [21:0] p_Result_8_fu_1958_p2;
wire   [0:0] icmp_ln947_fu_1944_p2;
wire   [0:0] icmp_ln947_1_fu_1963_p2;
wire   [0:0] tmp_20_fu_1975_p3;
wire   [21:0] add_ln949_fu_1988_p2;
wire   [0:0] p_Result_6_fu_1993_p3;
wire   [0:0] xor_ln949_fu_1982_p2;
wire   [0:0] and_ln949_fu_2000_p2;
wire   [0:0] a_fu_1969_p2;
wire   [0:0] or_ln949_fu_2006_p2;
wire   [31:0] m_fu_2020_p1;
wire   [31:0] add_ln958_fu_2028_p2;
wire   [31:0] sub_ln958_fu_2039_p2;
wire   [0:0] icmp_ln958_fu_2023_p2;
wire   [31:0] lshr_ln958_fu_2033_p2;
wire   [31:0] shl_ln958_fu_2044_p2;
wire   [31:0] m_1_fu_2050_p3;
wire   [31:0] or_ln_fu_2012_p3;
wire   [31:0] m_2_fu_2058_p2;
wire   [7:0] select_ln964_fu_2085_p3;
wire   [7:0] sub_ln964_fu_2092_p2;
wire   [7:0] add_ln964_fu_2097_p2;
wire   [31:0] m_6_fu_2082_p1;
wire   [8:0] tmp_s_fu_2103_p3;
wire   [31:0] p_Result_16_fu_2110_p5;
wire   [31:0] bitcast_ln739_fu_2122_p1;
reg    grp_fu_727_ce;
reg   [8:0] ap_NS_fsm;
wire    ap_CS_fsm_state24;
wire    regslice_both_out_C_V_data_U_apdone_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    regslice_both_in_A_V_data_U_apdone_blk;
wire   [31:0] in_A_TDATA_int;
wire    in_A_TVALID_int;
reg    in_A_TREADY_int;
wire    regslice_both_in_A_V_data_U_ack_in;
wire    regslice_both_in_A_V_last_V_U_apdone_blk;
wire   [0:0] in_A_TLAST_int;
wire    regslice_both_in_A_V_last_V_U_vld_out;
wire    regslice_both_in_A_V_last_V_U_ack_in;
wire   [31:0] out_C_TDATA_int;
reg    out_C_TVALID_int;
wire    out_C_TREADY_int;
wire    regslice_both_out_C_V_data_U_vld_out;
wire    regslice_both_out_C_V_last_V_U_apdone_blk;
wire    regslice_both_out_C_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_C_V_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
end

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_0_V_address0),
    .ce0(input_A_0_V_ce0),
    .we0(input_A_0_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_0_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_1_V_address0),
    .ce0(input_A_1_V_ce0),
    .we0(input_A_1_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_1_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_2_V_address0),
    .ce0(input_A_2_V_ce0),
    .we0(input_A_2_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_2_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_3_V_address0),
    .ce0(input_A_3_V_ce0),
    .we0(input_A_3_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_3_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_4_V_address0),
    .ce0(input_A_4_V_ce0),
    .we0(input_A_4_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_4_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_5_V_address0),
    .ce0(input_A_5_V_ce0),
    .we0(input_A_5_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_5_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_6_V_address0),
    .ce0(input_A_6_V_ce0),
    .we0(input_A_6_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_6_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_A_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_A_7_V_address0),
    .ce0(input_A_7_V_ce0),
    .we0(input_A_7_V_we0),
    .d0(select_ln603_fu_1046_p3),
    .q0(input_A_7_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_0_V_address0),
    .ce0(input_B_0_V_ce0),
    .we0(input_B_0_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_0_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_1_V_address0),
    .ce0(input_B_1_V_ce0),
    .we0(input_B_1_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_1_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_2_V_address0),
    .ce0(input_B_2_V_ce0),
    .we0(input_B_2_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_2_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_3_V_address0),
    .ce0(input_B_3_V_ce0),
    .we0(input_B_3_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_3_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_4_V_address0),
    .ce0(input_B_4_V_ce0),
    .we0(input_B_4_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_4_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_5_V_address0),
    .ce0(input_B_5_V_ce0),
    .we0(input_B_5_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_5_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_6_V_address0),
    .ce0(input_B_6_V_ce0),
    .we0(input_B_6_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_6_V_q0)
);

matrixmul_5_inputbkb #(
    .DataWidth( 22 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
input_B_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_B_7_V_address0),
    .ce0(input_B_7_V_ce0),
    .we0(input_B_7_V_we0),
    .d0(select_ln603_1_fu_1366_p3),
    .q0(input_B_7_V_q0)
);

matrixmul_5_outpurcU #(
    .DataWidth( 22 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
output_C_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_C_V_address0),
    .ce0(output_C_V_ce0),
    .we0(output_C_V_we0),
    .d0(output_C_V_d0),
    .q0(output_C_V_q0)
);

matrixmul_5_fpextsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
matrixmul_5_fpextsc4_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(in_A_TDATA_int),
    .ce(grp_fu_727_ce),
    .dout(grp_fu_727_p1)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_A_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TDATA),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_data_U_ack_in),
    .data_out(in_A_TDATA_int),
    .vld_out(in_A_TVALID_int),
    .ack_out(in_A_TREADY_int),
    .apdone_blk(regslice_both_in_A_V_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_A_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_A_TLAST),
    .vld_in(in_A_TVALID),
    .ack_in(regslice_both_in_A_V_last_V_U_ack_in),
    .data_out(in_A_TLAST_int),
    .vld_out(regslice_both_in_A_V_last_V_U_vld_out),
    .ack_out(in_A_TREADY_int),
    .apdone_blk(regslice_both_in_A_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_C_V_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_C_TDATA_int),
    .vld_in(out_C_TVALID_int),
    .ack_in(out_C_TREADY_int),
    .data_out(out_C_TDATA),
    .vld_out(regslice_both_out_C_V_data_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_C_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_2480_pp3_iter3_reg),
    .vld_in(out_C_TVALID_int),
    .ack_in(regslice_both_out_C_V_last_V_U_ack_in_dummy),
    .data_out(out_C_TLAST),
    .vld_out(regslice_both_out_C_V_last_V_U_vld_out),
    .ack_out(out_C_TREADY),
    .apdone_blk(regslice_both_out_C_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state12)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state18)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_fu_740_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_0_reg_617 <= col_fu_784_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        col_0_reg_617 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        col_1_reg_650 <= 4'd0;
    end else if (((icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_1_reg_650 <= col_5_fu_1104_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        col_2_reg_683 <= 4'd0;
    end else if (((icmp_ln311_fu_1380_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        col_2_reg_683 <= col_4_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        col_3_reg_716 <= 4'd0;
    end else if (((icmp_ln325_fu_1746_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_3_reg_716 <= col_6_fu_1845_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten19_reg_628 <= 7'd0;
    end else if (((icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten19_reg_628 <= add_ln299_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten39_reg_661 <= 7'd0;
    end else if (((icmp_ln311_fu_1380_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten39_reg_661 <= add_ln311_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten51_reg_694 <= 7'd0;
    end else if (((icmp_ln325_fu_1746_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten51_reg_694 <= add_ln325_fu_1752_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_fu_740_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_595 <= add_ln289_fu_746_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        indvar_flatten_reg_595 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_reg_2134 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_0_reg_606 <= select_ln295_1_reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        row_0_reg_606 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        row_1_reg_639 <= 4'd0;
    end else if (((icmp_ln299_reg_2209 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        row_1_reg_639 <= select_ln203_1_reg_2223;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        row_2_reg_672 <= 4'd0;
    end else if (((icmp_ln311_reg_2288 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        row_2_reg_672 <= select_ln318_1_reg_2302;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        row_3_reg_705 <= 4'd0;
    end else if (((icmp_ln325_reg_2461 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        row_3_reg_705 <= select_ln329_1_reg_2470;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln299_reg_2209_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln603_1_reg_2283 <= and_ln603_1_fu_1341_p2;
        select_ln585_3_reg_2278 <= select_ln585_3_fu_1322_p3;
        sext_ln581_1_reg_2273 <= sext_ln581_1_fu_1218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_reg_2134_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln603_reg_2204 <= and_ln603_fu_1021_p2;
        select_ln585_1_reg_2199 <= select_ln585_1_fu_1002_p3;
        sext_ln581_reg_2194 <= sext_ln581_fu_898_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln289_reg_2134 <= icmp_ln289_fu_740_p2;
        icmp_ln289_reg_2134_pp0_iter1_reg <= icmp_ln289_reg_2134;
        reg_735_pp0_iter1_reg <= reg_735;
        select_ln295_1_reg_2143_pp0_iter1_reg <= select_ln295_1_reg_2143;
        trunc_ln203_reg_2149_pp0_iter1_reg <= trunc_ln203_reg_2149;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln299_reg_2209 <= icmp_ln299_fu_1060_p2;
        icmp_ln299_reg_2209_pp1_iter1_reg <= icmp_ln299_reg_2209;
        reg_735_pp1_iter1_reg <= reg_735;
        select_ln203_reg_2218_pp1_iter1_reg <= select_ln203_reg_2218;
        trunc_ln203_1_reg_2228_pp1_iter1_reg <= trunc_ln203_1_reg_2228;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln311_reg_2288 <= icmp_ln311_fu_1380_p2;
        icmp_ln311_reg_2288_pp2_iter1_reg <= icmp_ln311_reg_2288;
        select_ln318_1_reg_2302_pp2_iter1_reg <= select_ln318_1_reg_2302;
        select_ln318_reg_2297_pp2_iter1_reg <= select_ln318_reg_2297;
        zext_ln318_1_reg_2332_pp2_iter1_reg[3 : 0] <= zext_ln318_1_reg_2332[3 : 0];
        zext_ln318_2_reg_2308_pp2_iter1_reg[3 : 0] <= zext_ln318_2_reg_2308[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln311_reg_2288_pp2_iter2_reg <= icmp_ln311_reg_2288_pp2_iter1_reg;
        icmp_ln311_reg_2288_pp2_iter3_reg <= icmp_ln311_reg_2288_pp2_iter2_reg;
        select_ln318_1_reg_2302_pp2_iter2_reg <= select_ln318_1_reg_2302_pp2_iter1_reg;
        select_ln318_1_reg_2302_pp2_iter3_reg <= select_ln318_1_reg_2302_pp2_iter2_reg;
        select_ln318_reg_2297_pp2_iter2_reg <= select_ln318_reg_2297_pp2_iter1_reg;
        select_ln318_reg_2297_pp2_iter3_reg <= select_ln318_reg_2297_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln325_reg_2461 <= icmp_ln325_fu_1746_p2;
        icmp_ln325_reg_2461_pp3_iter1_reg <= icmp_ln325_reg_2461;
        tmp_last_V_reg_2480_pp3_iter1_reg <= tmp_last_V_reg_2480;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln325_reg_2461_pp3_iter2_reg <= icmp_ln325_reg_2461_pp3_iter1_reg;
        icmp_ln325_reg_2461_pp3_iter3_reg <= icmp_ln325_reg_2461_pp3_iter2_reg;
        icmp_ln325_reg_2461_pp3_iter4_reg <= icmp_ln325_reg_2461_pp3_iter3_reg;
        icmp_ln935_reg_2490_pp3_iter2_reg <= icmp_ln935_reg_2490;
        icmp_ln935_reg_2490_pp3_iter3_reg <= icmp_ln935_reg_2490_pp3_iter2_reg;
        p_Result_14_reg_2495_pp3_iter2_reg <= p_Result_14_reg_2495;
        p_Result_14_reg_2495_pp3_iter3_reg <= p_Result_14_reg_2495_pp3_iter2_reg;
        tmp_V_4_reg_2500_pp3_iter2_reg <= tmp_V_4_reg_2500;
        tmp_last_V_reg_2480_pp3_iter2_reg <= tmp_last_V_reg_2480_pp3_iter1_reg;
        tmp_last_V_reg_2480_pp3_iter3_reg <= tmp_last_V_reg_2480_pp3_iter2_reg;
        trunc_ln943_reg_2539_pp3_iter3_reg <= trunc_ln943_reg_2539;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln299_reg_2209 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln571_1_reg_2242 <= icmp_ln571_1_fu_1170_p2;
        icmp_ln581_1_reg_2248 <= icmp_ln581_1_fu_1182_p2;
        icmp_ln582_1_reg_2261 <= icmp_ln582_1_fu_1208_p2;
        man_V_5_reg_2237 <= man_V_5_fu_1162_p3;
        sh_amt_1_reg_2254 <= sh_amt_1_fu_1200_p3;
        trunc_ln583_1_reg_2267 <= trunc_ln583_1_fu_1214_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_reg_2134 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln571_reg_2163 <= icmp_ln571_fu_850_p2;
        icmp_ln581_reg_2169 <= icmp_ln581_fu_862_p2;
        icmp_ln582_reg_2182 <= icmp_ln582_fu_888_p2;
        man_V_2_reg_2158 <= man_V_2_fu_842_p3;
        sh_amt_reg_2175 <= sh_amt_fu_880_p3;
        trunc_ln583_reg_2188 <= trunc_ln583_fu_894_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_reg_2461 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln935_reg_2490 <= icmp_ln935_fu_1851_p2;
        p_Result_14_reg_2495 <= output_C_V_q0[32'd21];
        p_Result_s_reg_2507 <= p_Result_s_fu_1879_p4;
        tmp_V_4_reg_2500 <= tmp_V_4_fu_1871_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_2490 == 1'd0) & (icmp_ln325_reg_2461_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        lsb_index_reg_2523 <= lsb_index_fu_1914_p2;
        sub_ln944_reg_2512 <= sub_ln944_fu_1904_p2;
        sub_ln947_reg_2534 <= sub_ln947_fu_1934_p2;
        tmp_19_reg_2529 <= {{lsb_index_fu_1914_p2[31:1]}};
        trunc_ln943_reg_2539 <= trunc_ln943_fu_1940_p1;
        trunc_ln944_reg_2518 <= trunc_ln944_fu_1910_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_2490_pp3_iter2_reg == 1'd0) & (icmp_ln325_reg_2461_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        m_5_reg_2544 <= {{m_2_fu_2058_p2[31:1]}};
        tmp_21_reg_2549 <= m_2_fu_2058_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_reg_2288 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        mul_ln1192_1_reg_2386 <= mul_ln1192_1_fu_1486_p2;
        mul_ln1192_reg_2376 <= mul_ln1192_fu_1466_p2;
        tmp_1_reg_2381 <= {{mul_ln1118_fu_1456_p2[31:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_reg_2288_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        mul_ln1192_2_reg_2416 <= mul_ln1192_2_fu_1543_p2;
        mul_ln1192_3_reg_2426 <= mul_ln1192_3_fu_1563_p2;
        mul_ln1192_4_reg_2431 <= mul_ln1192_4_fu_1573_p2;
        tmp_5_reg_2421 <= {{add_ln1192_1_fu_1534_p2[31:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_reg_2288_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        mul_ln1192_5_reg_2446 <= mul_ln1192_5_fu_1649_p2;
        mul_ln1192_6_reg_2456 <= mul_ln1192_6_fu_1669_p2;
        tmp_12_reg_2451 <= {{add_ln1192_4_fu_1640_p2[31:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln289_fu_740_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_735 <= in_A_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln203_1_reg_2223 <= select_ln203_1_fu_1092_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln299_fu_1060_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln203_reg_2218 <= select_ln203_fu_1084_p3;
        trunc_ln203_1_reg_2228 <= trunc_ln203_1_fu_1100_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        select_ln203_reg_2218_pp1_iter2_reg <= select_ln203_reg_2218_pp1_iter1_reg;
        trunc_ln203_1_reg_2228_pp1_iter2_reg <= trunc_ln203_1_reg_2228_pp1_iter1_reg;
        trunc_ln583_1_reg_2267_pp1_iter2_reg <= trunc_ln583_1_reg_2267;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_fu_740_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln295_1_reg_2143 <= select_ln295_1_fu_772_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        select_ln295_1_reg_2143_pp0_iter2_reg <= select_ln295_1_reg_2143_pp0_iter1_reg;
        trunc_ln203_reg_2149_pp0_iter2_reg <= trunc_ln203_reg_2149_pp0_iter1_reg;
        trunc_ln583_reg_2188_pp0_iter2_reg <= trunc_ln583_reg_2188;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_fu_1380_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln318_1_reg_2302 <= select_ln318_1_fu_1412_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_fu_1380_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln318_reg_2297 <= select_ln318_fu_1404_p3;
        zext_ln318_1_reg_2332[3 : 0] <= zext_ln318_1_fu_1427_p1[3 : 0];
        zext_ln318_2_reg_2308[3 : 0] <= zext_ln318_2_fu_1420_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1746_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        select_ln329_1_reg_2470 <= select_ln329_1_fu_1778_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1746_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_last_V_reg_2480 <= tmp_last_V_fu_1839_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln289_fu_740_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln203_reg_2149 <= trunc_ln203_fu_780_p1;
    end
end

always @ (*) begin
    if ((icmp_ln289_fu_740_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln299_fu_1060_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln311_fu_1380_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln325_fu_1746_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_2134 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_0_phi_fu_610_p4 = select_ln295_1_reg_2143;
    end else begin
        ap_phi_mux_row_0_phi_fu_610_p4 = row_0_reg_606;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln299_reg_2209 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_row_1_phi_fu_643_p4 = select_ln203_1_reg_2223;
    end else begin
        ap_phi_mux_row_1_phi_fu_643_p4 = row_1_reg_639;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln311_reg_2288 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_row_2_phi_fu_676_p4 = select_ln318_1_reg_2302;
    end else begin
        ap_phi_mux_row_2_phi_fu_676_p4 = row_2_reg_672;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln325_reg_2461 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_row_3_phi_fu_709_p4 = select_ln329_1_reg_2470;
    end else begin
        ap_phi_mux_row_3_phi_fu_709_p4 = row_3_reg_705;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_727_ce = 1'b1;
    end else begin
        grp_fu_727_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln289_fu_740_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_A_TDATA_blk_n = in_A_TVALID_int;
    end else begin
        in_A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_in_A_V_data_U_ack_in == 1'b1) & (in_A_TVALID == 1'b1))) begin
        in_A_TREADY = 1'b1;
    end else begin
        in_A_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln299_fu_1060_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln289_fu_740_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_A_TREADY_int = 1'b1;
    end else begin
        in_A_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_0_V_address0 = zext_ln318_2_fu_1420_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_0_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_0_V_ce0 = 1'b1;
    end else begin
        input_A_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_0_V_we0 = 1'b1;
    end else begin
        input_A_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_1_V_address0 = zext_ln318_2_fu_1420_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_1_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_1_V_ce0 = 1'b1;
    end else begin
        input_A_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_1_V_we0 = 1'b1;
    end else begin
        input_A_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_2_V_address0 = zext_ln318_2_fu_1420_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_2_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_2_V_ce0 = 1'b1;
    end else begin
        input_A_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_2_V_we0 = 1'b1;
    end else begin
        input_A_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_3_V_address0 = zext_ln318_2_reg_2308;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_3_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_3_V_ce0 = 1'b1;
    end else begin
        input_A_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_3_V_we0 = 1'b1;
    end else begin
        input_A_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_4_V_address0 = zext_ln318_2_reg_2308;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_4_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_4_V_ce0 = 1'b1;
    end else begin
        input_A_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_4_V_we0 = 1'b1;
    end else begin
        input_A_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_A_5_V_address0 = zext_ln318_2_reg_2308;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_5_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_5_V_ce0 = 1'b1;
    end else begin
        input_A_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_5_V_we0 = 1'b1;
    end else begin
        input_A_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        input_A_6_V_address0 = zext_ln318_2_reg_2308_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_6_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_6_V_ce0 = 1'b1;
    end else begin
        input_A_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_6_V_we0 = 1'b1;
    end else begin
        input_A_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        input_A_7_V_address0 = zext_ln318_2_reg_2308_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        input_A_7_V_address0 = zext_ln295_fu_1027_p1;
    end else begin
        input_A_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_A_7_V_ce0 = 1'b1;
    end else begin
        input_A_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln203_reg_2149_pp0_iter2_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_A_7_V_we0 = 1'b1;
    end else begin
        input_A_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_0_V_address0 = zext_ln318_1_fu_1427_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_0_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_0_V_ce0 = 1'b1;
    end else begin
        input_B_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_0_V_we0 = 1'b1;
    end else begin
        input_B_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_1_V_address0 = zext_ln318_1_fu_1427_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_1_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_1_V_ce0 = 1'b1;
    end else begin
        input_B_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_1_V_we0 = 1'b1;
    end else begin
        input_B_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_2_V_address0 = zext_ln318_1_fu_1427_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_2_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_2_V_ce0 = 1'b1;
    end else begin
        input_B_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_2_V_we0 = 1'b1;
    end else begin
        input_B_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_3_V_address0 = zext_ln318_1_reg_2332;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_3_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_3_V_ce0 = 1'b1;
    end else begin
        input_B_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_3_V_we0 = 1'b1;
    end else begin
        input_B_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_4_V_address0 = zext_ln318_1_reg_2332;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_4_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_4_V_ce0 = 1'b1;
    end else begin
        input_B_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd4) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_4_V_we0 = 1'b1;
    end else begin
        input_B_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        input_B_5_V_address0 = zext_ln318_1_reg_2332;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_5_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_5_V_ce0 = 1'b1;
    end else begin
        input_B_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd5) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_5_V_we0 = 1'b1;
    end else begin
        input_B_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        input_B_6_V_address0 = zext_ln318_1_reg_2332_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_6_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_6_V_ce0 = 1'b1;
    end else begin
        input_B_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd6) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_6_V_we0 = 1'b1;
    end else begin
        input_B_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        input_B_7_V_address0 = zext_ln318_1_reg_2332_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        input_B_7_V_address0 = zext_ln305_fu_1347_p1;
    end else begin
        input_B_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        input_B_7_V_ce0 = 1'b1;
    end else begin
        input_B_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (trunc_ln203_1_reg_2228_pp1_iter2_reg == 3'd7) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_B_7_V_we0 = 1'b1;
    end else begin
        input_B_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0) & (icmp_ln325_reg_2461_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0) & (icmp_ln325_reg_2461_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        out_C_TDATA_blk_n = out_C_TREADY_int;
    end else begin
        out_C_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln325_reg_2461_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        out_C_TVALID_int = 1'b1;
    end else begin
        out_C_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        output_C_V_address0 = zext_ln935_1_fu_1828_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        output_C_V_address0 = zext_ln203_1_fu_1695_p1;
    end else begin
        output_C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
        output_C_V_ce0 = 1'b1;
    end else begin
        output_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln311_reg_2288_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        output_C_V_we0 = 1'b1;
    end else begin
        output_C_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln289_fu_740_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln289_fu_740_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln299_fu_1060_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln299_fu_1060_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln311_fu_1380_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln311_fu_1380_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln325_fu_1746_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter4 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter4 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln325_fu_1746_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (regslice_both_out_C_V_data_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1176_p2 = (12'd1075 - zext_ln461_1_fu_1136_p1);

assign F2_fu_856_p2 = (12'd1075 - zext_ln461_fu_816_p1);

assign a_fu_1969_p2 = (icmp_ln947_fu_1944_p2 & icmp_ln947_1_fu_1963_p2);

assign add_ln1192_1_fu_1534_p2 = (shl_ln728_1_fu_1526_p3 + mul_ln1192_1_reg_2386);

assign add_ln1192_2_fu_1594_p2 = (shl_ln728_2_fu_1587_p3 + mul_ln1192_2_reg_2416);

assign add_ln1192_3_fu_1617_p2 = (shl_ln728_3_fu_1609_p3 + mul_ln1192_3_reg_2426);

assign add_ln1192_4_fu_1640_p2 = (shl_ln728_4_fu_1632_p3 + mul_ln1192_4_reg_2431);

assign add_ln1192_5_fu_1707_p2 = (shl_ln728_5_fu_1700_p3 + mul_ln1192_5_reg_2446);

assign add_ln1192_6_fu_1730_p2 = (shl_ln728_6_fu_1722_p3 + mul_ln1192_6_reg_2456);

assign add_ln1192_fu_1511_p2 = (shl_ln_fu_1504_p3 + mul_ln1192_reg_2376);

assign add_ln203_fu_1689_p2 = (zext_ln203_fu_1686_p1 + zext_ln318_fu_1682_p1);

assign add_ln289_fu_746_p2 = (indvar_flatten_reg_595 + 7'd1);

assign add_ln299_fu_1066_p2 = (indvar_flatten19_reg_628 + 7'd1);

assign add_ln311_fu_1386_p2 = (indvar_flatten39_reg_661 + 7'd1);

assign add_ln325_fu_1752_p2 = (indvar_flatten51_reg_694 + 7'd1);

assign add_ln581_1_fu_1188_p2 = ($signed(12'd4086) + $signed(F2_1_fu_1176_p2));

assign add_ln581_fu_868_p2 = ($signed(12'd4086) + $signed(F2_fu_856_p2));

assign add_ln935_fu_1822_p2 = (zext_ln331_fu_1794_p1 + zext_ln935_fu_1818_p1);

assign add_ln949_fu_1988_p2 = ($signed(22'd4194280) + $signed(trunc_ln944_reg_2518));

assign add_ln958_fu_2028_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_2512));

assign add_ln964_fu_2097_p2 = (select_ln964_fu_2085_p3 + sub_ln964_fu_2092_p2);

assign and_ln581_1_fu_1291_p2 = (xor_ln582_1_fu_1285_p2 & icmp_ln581_1_reg_2248);

assign and_ln581_fu_971_p2 = (xor_ln582_fu_965_p2 & icmp_ln581_reg_2169);

assign and_ln582_1_fu_1269_p2 = (xor_ln571_1_fu_1264_p2 & icmp_ln582_1_reg_2261);

assign and_ln582_fu_949_p2 = (xor_ln571_fu_944_p2 & icmp_ln582_reg_2182);

assign and_ln585_1_fu_996_p2 = (icmp_ln585_fu_901_p2 & and_ln581_fu_971_p2);

assign and_ln585_2_fu_1302_p2 = (xor_ln585_1_fu_1296_p2 & and_ln581_1_fu_1291_p2);

assign and_ln585_3_fu_1316_p2 = (icmp_ln585_1_fu_1221_p2 & and_ln581_1_fu_1291_p2);

assign and_ln585_fu_982_p2 = (xor_ln585_fu_976_p2 & and_ln581_fu_971_p2);

assign and_ln603_1_fu_1341_p2 = (xor_ln581_1_fu_1335_p2 & icmp_ln603_1_fu_1226_p2);

assign and_ln603_fu_1021_p2 = (xor_ln581_fu_1015_p2 & icmp_ln603_fu_906_p2);

assign and_ln949_fu_2000_p2 = (xor_ln949_fu_1982_p2 & p_Result_6_fu_1993_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln289_fu_740_p2 == 1'd0) & (in_A_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln289_fu_740_p2 == 1'd0) & (in_A_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln299_fu_1060_p2 == 1'd0) & (in_A_TVALID_int == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln299_fu_1060_p2 == 1'd0) & (in_A_TVALID_int == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp3_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp3_iter5 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp3_iter4 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((icmp_ln325_reg_2461_pp3_iter3_reg == 1'd0) & (out_C_TREADY_int == 1'b0));
end

assign ap_block_state22_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_io = ((icmp_ln325_reg_2461_pp3_iter4_reg == 1'd0) & (out_C_TREADY_int == 1'b0));
end

assign ap_block_state23_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln289_fu_740_p2 == 1'd0) & (in_A_TVALID_int == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter0 = ((icmp_ln299_fu_1060_p2 == 1'd0) & (in_A_TVALID_int == 1'b0));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_1_fu_1235_p2 = $signed(man_V_5_reg_2237) >>> zext_ln586_1_fu_1231_p1;

assign ashr_ln586_fu_915_p2 = $signed(man_V_2_reg_2158) >>> zext_ln586_fu_911_p1;

assign bitcast_ln696_1_fu_1244_p1 = reg_735_pp1_iter1_reg;

assign bitcast_ln696_fu_924_p1 = reg_735_pp0_iter1_reg;

assign bitcast_ln739_fu_2122_p1 = p_Result_16_fu_2110_p5;

assign col_4_fu_1434_p2 = (select_ln318_fu_1404_p3 + 4'd1);

assign col_5_fu_1104_p2 = (select_ln203_fu_1084_p3 + 4'd1);

assign col_6_fu_1845_p2 = (4'd1 + select_ln329_fu_1770_p3);

assign col_fu_784_p2 = (select_ln295_fu_764_p3 + 4'd1);

assign exp_tmp_V_1_fu_1126_p4 = {{ireg_V_1_fu_1110_p1[62:52]}};

assign exp_tmp_V_fu_806_p4 = {{ireg_V_fu_790_p1[62:52]}};

assign icmp_ln289_fu_740_p2 = ((indvar_flatten_reg_595 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_758_p2 = ((col_0_reg_617 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_1060_p2 = ((indvar_flatten19_reg_628 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_1078_p2 = ((col_1_reg_650 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln311_fu_1380_p2 = ((indvar_flatten39_reg_661 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln312_fu_1398_p2 = ((col_2_reg_683 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln325_fu_1746_p2 = ((indvar_flatten51_reg_694 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1764_p2 = ((col_3_reg_716 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln331_1_fu_1833_p2 = ((select_ln329_fu_1770_p3 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln331_2_fu_1804_p2 = ((ap_phi_mux_row_3_phi_fu_709_p4 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_1798_p2 = ((row_6_fu_1758_p2 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1170_p2 = ((trunc_ln556_1_fu_1114_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_850_p2 = ((trunc_ln556_fu_794_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1182_p2 = (($signed(F2_1_fu_1176_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_862_p2 = (($signed(F2_fu_856_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1208_p2 = ((F2_1_fu_1176_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_888_p2 = ((F2_fu_856_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1221_p2 = ((sh_amt_1_reg_2254 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_901_p2 = ((sh_amt_reg_2175 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1226_p2 = ((sh_amt_1_reg_2254 < 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_906_p2 = ((sh_amt_reg_2175 < 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1851_p2 = ((output_C_V_q0 == 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1963_p2 = ((p_Result_8_fu_1958_p2 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1944_p2 = (($signed(tmp_19_reg_2529) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_2023_p2 = (($signed(lsb_index_reg_2523) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_1110_p1 = grp_fu_727_p1;

assign ireg_V_fu_790_p1 = grp_fu_727_p1;


always @ (p_Result_15_fu_1889_p3) begin
    if (p_Result_15_fu_1889_p3[0] == 1'b1) begin
        l_fu_1896_p3 = 32'd0;
    end else if (p_Result_15_fu_1889_p3[1] == 1'b1) begin
        l_fu_1896_p3 = 32'd1;
    end else if (p_Result_15_fu_1889_p3[2] == 1'b1) begin
        l_fu_1896_p3 = 32'd2;
    end else if (p_Result_15_fu_1889_p3[3] == 1'b1) begin
        l_fu_1896_p3 = 32'd3;
    end else if (p_Result_15_fu_1889_p3[4] == 1'b1) begin
        l_fu_1896_p3 = 32'd4;
    end else if (p_Result_15_fu_1889_p3[5] == 1'b1) begin
        l_fu_1896_p3 = 32'd5;
    end else if (p_Result_15_fu_1889_p3[6] == 1'b1) begin
        l_fu_1896_p3 = 32'd6;
    end else if (p_Result_15_fu_1889_p3[7] == 1'b1) begin
        l_fu_1896_p3 = 32'd7;
    end else if (p_Result_15_fu_1889_p3[8] == 1'b1) begin
        l_fu_1896_p3 = 32'd8;
    end else if (p_Result_15_fu_1889_p3[9] == 1'b1) begin
        l_fu_1896_p3 = 32'd9;
    end else if (p_Result_15_fu_1889_p3[10] == 1'b1) begin
        l_fu_1896_p3 = 32'd10;
    end else if (p_Result_15_fu_1889_p3[11] == 1'b1) begin
        l_fu_1896_p3 = 32'd11;
    end else if (p_Result_15_fu_1889_p3[12] == 1'b1) begin
        l_fu_1896_p3 = 32'd12;
    end else if (p_Result_15_fu_1889_p3[13] == 1'b1) begin
        l_fu_1896_p3 = 32'd13;
    end else if (p_Result_15_fu_1889_p3[14] == 1'b1) begin
        l_fu_1896_p3 = 32'd14;
    end else if (p_Result_15_fu_1889_p3[15] == 1'b1) begin
        l_fu_1896_p3 = 32'd15;
    end else if (p_Result_15_fu_1889_p3[16] == 1'b1) begin
        l_fu_1896_p3 = 32'd16;
    end else if (p_Result_15_fu_1889_p3[17] == 1'b1) begin
        l_fu_1896_p3 = 32'd17;
    end else if (p_Result_15_fu_1889_p3[18] == 1'b1) begin
        l_fu_1896_p3 = 32'd18;
    end else if (p_Result_15_fu_1889_p3[19] == 1'b1) begin
        l_fu_1896_p3 = 32'd19;
    end else if (p_Result_15_fu_1889_p3[20] == 1'b1) begin
        l_fu_1896_p3 = 32'd20;
    end else if (p_Result_15_fu_1889_p3[21] == 1'b1) begin
        l_fu_1896_p3 = 32'd21;
    end else if (p_Result_15_fu_1889_p3[22] == 1'b1) begin
        l_fu_1896_p3 = 32'd22;
    end else if (p_Result_15_fu_1889_p3[23] == 1'b1) begin
        l_fu_1896_p3 = 32'd23;
    end else if (p_Result_15_fu_1889_p3[24] == 1'b1) begin
        l_fu_1896_p3 = 32'd24;
    end else if (p_Result_15_fu_1889_p3[25] == 1'b1) begin
        l_fu_1896_p3 = 32'd25;
    end else if (p_Result_15_fu_1889_p3[26] == 1'b1) begin
        l_fu_1896_p3 = 32'd26;
    end else if (p_Result_15_fu_1889_p3[27] == 1'b1) begin
        l_fu_1896_p3 = 32'd27;
    end else if (p_Result_15_fu_1889_p3[28] == 1'b1) begin
        l_fu_1896_p3 = 32'd28;
    end else if (p_Result_15_fu_1889_p3[29] == 1'b1) begin
        l_fu_1896_p3 = 32'd29;
    end else if (p_Result_15_fu_1889_p3[30] == 1'b1) begin
        l_fu_1896_p3 = 32'd30;
    end else if (p_Result_15_fu_1889_p3[31] == 1'b1) begin
        l_fu_1896_p3 = 32'd31;
    end else begin
        l_fu_1896_p3 = 32'd32;
    end
end

assign lsb_index_fu_1914_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1904_p2));

assign lshr_ln947_fu_1952_p2 = 22'd4194303 >> zext_ln947_fu_1949_p1;

assign lshr_ln958_fu_2033_p2 = m_fu_2020_p1 >> add_ln958_fu_2028_p2;

assign m_1_fu_2050_p3 = ((icmp_ln958_fu_2023_p2[0:0] === 1'b1) ? lshr_ln958_fu_2033_p2 : shl_ln958_fu_2044_p2);

assign m_2_fu_2058_p2 = (m_1_fu_2050_p3 + or_ln_fu_2012_p3);

assign m_6_fu_2082_p1 = m_5_reg_2544;

assign m_fu_2020_p1 = tmp_V_4_reg_2500_pp3_iter2_reg;

assign man_V_1_fu_836_p2 = (54'd0 - p_Result_11_fu_832_p1);

assign man_V_2_fu_842_p3 = ((p_Result_10_fu_798_p3[0:0] === 1'b1) ? man_V_1_fu_836_p2 : p_Result_11_fu_832_p1);

assign man_V_4_fu_1156_p2 = (54'd0 - p_Result_13_fu_1152_p1);

assign man_V_5_fu_1162_p3 = ((p_Result_12_fu_1118_p3[0:0] === 1'b1) ? man_V_4_fu_1156_p2 : p_Result_13_fu_1152_p1);

assign mul_ln1118_fu_1456_p0 = input_A_0_V_q0;

assign mul_ln1118_fu_1456_p1 = input_B_0_V_q0;

assign mul_ln1118_fu_1456_p2 = ($signed(mul_ln1118_fu_1456_p0) * $signed(mul_ln1118_fu_1456_p1));

assign mul_ln1192_1_fu_1486_p0 = input_A_2_V_q0;

assign mul_ln1192_1_fu_1486_p1 = input_B_2_V_q0;

assign mul_ln1192_1_fu_1486_p2 = ($signed(mul_ln1192_1_fu_1486_p0) * $signed(mul_ln1192_1_fu_1486_p1));

assign mul_ln1192_2_fu_1543_p0 = input_A_3_V_q0;

assign mul_ln1192_2_fu_1543_p1 = input_B_3_V_q0;

assign mul_ln1192_2_fu_1543_p2 = ($signed(mul_ln1192_2_fu_1543_p0) * $signed(mul_ln1192_2_fu_1543_p1));

assign mul_ln1192_3_fu_1563_p0 = input_A_4_V_q0;

assign mul_ln1192_3_fu_1563_p1 = input_B_4_V_q0;

assign mul_ln1192_3_fu_1563_p2 = ($signed(mul_ln1192_3_fu_1563_p0) * $signed(mul_ln1192_3_fu_1563_p1));

assign mul_ln1192_4_fu_1573_p0 = input_A_5_V_q0;

assign mul_ln1192_4_fu_1573_p1 = input_B_5_V_q0;

assign mul_ln1192_4_fu_1573_p2 = ($signed(mul_ln1192_4_fu_1573_p0) * $signed(mul_ln1192_4_fu_1573_p1));

assign mul_ln1192_5_fu_1649_p0 = input_A_6_V_q0;

assign mul_ln1192_5_fu_1649_p1 = input_B_6_V_q0;

assign mul_ln1192_5_fu_1649_p2 = ($signed(mul_ln1192_5_fu_1649_p0) * $signed(mul_ln1192_5_fu_1649_p1));

assign mul_ln1192_6_fu_1669_p0 = input_A_7_V_q0;

assign mul_ln1192_6_fu_1669_p1 = input_B_7_V_q0;

assign mul_ln1192_6_fu_1669_p2 = ($signed(mul_ln1192_6_fu_1669_p0) * $signed(mul_ln1192_6_fu_1669_p1));

assign mul_ln1192_fu_1466_p0 = input_A_1_V_q0;

assign mul_ln1192_fu_1466_p1 = input_B_1_V_q0;

assign mul_ln1192_fu_1466_p2 = ($signed(mul_ln1192_fu_1466_p0) * $signed(mul_ln1192_fu_1466_p1));

assign or_ln581_1_fu_1330_p2 = (or_ln582_1_fu_1281_p2 | icmp_ln581_1_reg_2248);

assign or_ln581_fu_1010_p2 = (or_ln582_fu_961_p2 | icmp_ln581_reg_2169);

assign or_ln582_1_fu_1281_p2 = (icmp_ln582_1_reg_2261 | icmp_ln571_1_reg_2242);

assign or_ln582_fu_961_p2 = (icmp_ln582_reg_2182 | icmp_ln571_reg_2163);

assign or_ln949_fu_2006_p2 = (and_ln949_fu_2000_p2 | a_fu_1969_p2);

assign or_ln_fu_2012_p3 = {{31'd0}, {or_ln949_fu_2006_p2}};

assign out_C_TDATA_int = ((icmp_ln935_reg_2490_pp3_iter3_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_2122_p1);

assign out_C_TVALID = regslice_both_out_C_V_data_U_vld_out;

assign output_C_V_d0 = {{add_ln1192_6_fu_1730_p2[31:10]}};

assign p_Result_10_fu_798_p3 = ireg_V_fu_790_p1[32'd63];

assign p_Result_11_fu_832_p1 = tmp_4_fu_824_p3;

assign p_Result_12_fu_1118_p3 = ireg_V_1_fu_1110_p1[32'd63];

assign p_Result_13_fu_1152_p1 = tmp_7_fu_1144_p3;

assign p_Result_14_fu_1857_p3 = output_C_V_q0[32'd21];

assign p_Result_15_fu_1889_p3 = {{10'd1023}, {p_Result_s_reg_2507}};

assign p_Result_16_fu_2110_p5 = {{tmp_s_fu_2103_p3}, {m_6_fu_2082_p1[22:0]}};

assign p_Result_6_fu_1993_p3 = tmp_V_4_reg_2500_pp3_iter2_reg[add_ln949_fu_1988_p2];

assign p_Result_8_fu_1958_p2 = (tmp_V_4_reg_2500_pp3_iter2_reg & lshr_ln947_fu_1952_p2);

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_1871_p3) begin
    for (ap_tvar_int_0 = 22 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 21 - 0) begin
            p_Result_s_fu_1879_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1879_p4[ap_tvar_int_0] = tmp_V_4_fu_1871_p3[21 - ap_tvar_int_0];
        end
    end
end

assign row_4_fu_1072_p2 = (4'd1 + ap_phi_mux_row_1_phi_fu_643_p4);

assign row_5_fu_1392_p2 = (ap_phi_mux_row_2_phi_fu_676_p4 + 4'd1);

assign row_6_fu_1758_p2 = (4'd1 + ap_phi_mux_row_3_phi_fu_709_p4);

assign row_fu_752_p2 = (4'd1 + ap_phi_mux_row_0_phi_fu_610_p4);

assign select_ln203_1_fu_1092_p3 = ((icmp_ln300_fu_1078_p2[0:0] === 1'b1) ? row_4_fu_1072_p2 : ap_phi_mux_row_1_phi_fu_643_p4);

assign select_ln203_fu_1084_p3 = ((icmp_ln300_fu_1078_p2[0:0] === 1'b1) ? 4'd0 : col_1_reg_650);

assign select_ln295_1_fu_772_p3 = ((icmp_ln290_fu_758_p2[0:0] === 1'b1) ? row_fu_752_p2 : ap_phi_mux_row_0_phi_fu_610_p4);

assign select_ln295_fu_764_p3 = ((icmp_ln290_fu_758_p2[0:0] === 1'b1) ? 4'd0 : col_0_reg_617);

assign select_ln318_1_fu_1412_p3 = ((icmp_ln312_fu_1398_p2[0:0] === 1'b1) ? row_5_fu_1392_p2 : ap_phi_mux_row_2_phi_fu_676_p4);

assign select_ln318_fu_1404_p3 = ((icmp_ln312_fu_1398_p2[0:0] === 1'b1) ? 4'd0 : col_2_reg_683);

assign select_ln329_1_fu_1778_p3 = ((icmp_ln326_fu_1764_p2[0:0] === 1'b1) ? row_6_fu_1758_p2 : ap_phi_mux_row_3_phi_fu_709_p4);

assign select_ln329_2_fu_1810_p3 = ((icmp_ln326_fu_1764_p2[0:0] === 1'b1) ? icmp_ln331_fu_1798_p2 : icmp_ln331_2_fu_1804_p2);

assign select_ln329_fu_1770_p3 = ((icmp_ln326_fu_1764_p2[0:0] === 1'b1) ? 4'd0 : col_3_reg_716);

assign select_ln582_1_fu_1274_p3 = ((and_ln582_1_fu_1269_p2[0:0] === 1'b1) ? trunc_ln583_1_reg_2267 : 22'd0);

assign select_ln582_fu_954_p3 = ((and_ln582_fu_949_p2[0:0] === 1'b1) ? trunc_ln583_reg_2188 : 22'd0);

assign select_ln585_1_fu_1002_p3 = ((and_ln585_1_fu_996_p2[0:0] === 1'b1) ? trunc_ln586_fu_920_p1 : select_ln585_fu_988_p3);

assign select_ln585_2_fu_1308_p3 = ((and_ln585_2_fu_1302_p2[0:0] === 1'b1) ? select_ln588_1_fu_1256_p3 : select_ln582_1_fu_1274_p3);

assign select_ln585_3_fu_1322_p3 = ((and_ln585_3_fu_1316_p2[0:0] === 1'b1) ? trunc_ln586_1_fu_1240_p1 : select_ln585_2_fu_1308_p3);

assign select_ln585_fu_988_p3 = ((and_ln585_fu_982_p2[0:0] === 1'b1) ? select_ln588_fu_936_p3 : select_ln582_fu_954_p3);

assign select_ln588_1_fu_1256_p3 = ((tmp_16_fu_1248_p3[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign select_ln588_fu_936_p3 = ((tmp_fu_928_p3[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign select_ln603_1_fu_1366_p3 = ((and_ln603_1_reg_2283[0:0] === 1'b1) ? shl_ln604_1_fu_1361_p2 : select_ln585_3_reg_2278);

assign select_ln603_fu_1046_p3 = ((and_ln603_reg_2204[0:0] === 1'b1) ? shl_ln604_fu_1041_p2 : select_ln585_1_reg_2199);

assign select_ln964_fu_2085_p3 = ((tmp_21_reg_2549[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln581_1_fu_1218_p1 = sh_amt_1_reg_2254;

assign sext_ln581_1cast_fu_1358_p1 = sext_ln581_1_reg_2273[21:0];

assign sext_ln581_fu_898_p1 = sh_amt_reg_2175;

assign sext_ln581cast_fu_1038_p1 = sext_ln581_reg_2194[21:0];

assign sh_amt_1_fu_1200_p3 = ((icmp_ln581_1_fu_1182_p2[0:0] === 1'b1) ? add_ln581_1_fu_1188_p2 : sub_ln581_1_fu_1194_p2);

assign sh_amt_fu_880_p3 = ((icmp_ln581_fu_862_p2[0:0] === 1'b1) ? add_ln581_fu_868_p2 : sub_ln581_fu_874_p2);

assign shl_ln604_1_fu_1361_p2 = trunc_ln583_1_reg_2267_pp1_iter2_reg << sext_ln581_1cast_fu_1358_p1;

assign shl_ln604_fu_1041_p2 = trunc_ln583_reg_2188_pp0_iter2_reg << sext_ln581cast_fu_1038_p1;

assign shl_ln728_1_fu_1526_p3 = {{tmp_2_fu_1516_p4}, {10'd0}};

assign shl_ln728_2_fu_1587_p3 = {{tmp_5_reg_2421}, {10'd0}};

assign shl_ln728_3_fu_1609_p3 = {{tmp_10_fu_1599_p4}, {10'd0}};

assign shl_ln728_4_fu_1632_p3 = {{tmp_11_fu_1622_p4}, {10'd0}};

assign shl_ln728_5_fu_1700_p3 = {{tmp_12_reg_2451}, {10'd0}};

assign shl_ln728_6_fu_1722_p3 = {{tmp_13_fu_1712_p4}, {10'd0}};

assign shl_ln958_fu_2044_p2 = m_fu_2020_p1 << sub_ln958_fu_2039_p2;

assign shl_ln_fu_1504_p3 = {{tmp_1_reg_2381}, {10'd0}};

assign sub_ln581_1_fu_1194_p2 = (12'd10 - F2_1_fu_1176_p2);

assign sub_ln581_fu_874_p2 = (12'd10 - F2_fu_856_p2);

assign sub_ln944_fu_1904_p2 = (32'd22 - l_fu_1896_p3);

assign sub_ln947_fu_1934_p2 = (5'd15 - trunc_ln947_fu_1930_p1);

assign sub_ln958_fu_2039_p2 = (32'd25 - sub_ln944_reg_2512);

assign sub_ln964_fu_2092_p2 = (8'd12 - trunc_ln943_reg_2539_pp3_iter3_reg);

assign tmp_10_fu_1599_p4 = {{add_ln1192_2_fu_1594_p2[31:10]}};

assign tmp_11_fu_1622_p4 = {{add_ln1192_3_fu_1617_p2[31:10]}};

assign tmp_13_fu_1712_p4 = {{add_ln1192_5_fu_1707_p2[31:10]}};

assign tmp_14_fu_1786_p3 = {{select_ln329_1_fu_1778_p3}, {3'd0}};

assign tmp_16_fu_1248_p3 = bitcast_ln696_1_fu_1244_p1[32'd31];

assign tmp_17_fu_1675_p3 = {{select_ln318_1_reg_2302_pp2_iter3_reg}, {3'd0}};

assign tmp_20_fu_1975_p3 = lsb_index_reg_2523[32'd31];

assign tmp_2_fu_1516_p4 = {{add_ln1192_fu_1511_p2[31:10]}};

assign tmp_4_fu_824_p3 = {{1'd1}, {trunc_ln565_fu_820_p1}};

assign tmp_7_fu_1144_p3 = {{1'd1}, {trunc_ln565_1_fu_1140_p1}};

assign tmp_V_4_fu_1871_p3 = ((p_Result_14_fu_1857_p3[0:0] === 1'b1) ? tmp_V_fu_1865_p2 : output_C_V_q0);

assign tmp_V_fu_1865_p2 = (22'd0 - output_C_V_q0);

assign tmp_fu_928_p3 = bitcast_ln696_fu_924_p1[32'd31];

assign tmp_last_V_fu_1839_p2 = (select_ln329_2_fu_1810_p3 & icmp_ln331_1_fu_1833_p2);

assign tmp_s_fu_2103_p3 = {{p_Result_14_reg_2495_pp3_iter3_reg}, {add_ln964_fu_2097_p2}};

assign trunc_ln203_1_fu_1100_p1 = select_ln203_1_fu_1092_p3[2:0];

assign trunc_ln203_fu_780_p1 = select_ln295_fu_764_p3[2:0];

assign trunc_ln556_1_fu_1114_p1 = ireg_V_1_fu_1110_p1[62:0];

assign trunc_ln556_fu_794_p1 = ireg_V_fu_790_p1[62:0];

assign trunc_ln565_1_fu_1140_p1 = ireg_V_1_fu_1110_p1[51:0];

assign trunc_ln565_fu_820_p1 = ireg_V_fu_790_p1[51:0];

assign trunc_ln583_1_fu_1214_p1 = man_V_5_fu_1162_p3[21:0];

assign trunc_ln583_fu_894_p1 = man_V_2_fu_842_p3[21:0];

assign trunc_ln586_1_fu_1240_p1 = ashr_ln586_1_fu_1235_p2[21:0];

assign trunc_ln586_fu_920_p1 = ashr_ln586_fu_915_p2[21:0];

assign trunc_ln943_fu_1940_p1 = l_fu_1896_p3[7:0];

assign trunc_ln944_fu_1910_p1 = sub_ln944_fu_1904_p2[21:0];

assign trunc_ln947_fu_1930_p1 = sub_ln944_fu_1904_p2[4:0];

assign xor_ln571_1_fu_1264_p2 = (icmp_ln571_1_reg_2242 ^ 1'd1);

assign xor_ln571_fu_944_p2 = (icmp_ln571_reg_2163 ^ 1'd1);

assign xor_ln581_1_fu_1335_p2 = (or_ln581_1_fu_1330_p2 ^ 1'd1);

assign xor_ln581_fu_1015_p2 = (or_ln581_fu_1010_p2 ^ 1'd1);

assign xor_ln582_1_fu_1285_p2 = (or_ln582_1_fu_1281_p2 ^ 1'd1);

assign xor_ln582_fu_965_p2 = (or_ln582_fu_961_p2 ^ 1'd1);

assign xor_ln585_1_fu_1296_p2 = (icmp_ln585_1_fu_1221_p2 ^ 1'd1);

assign xor_ln585_fu_976_p2 = (icmp_ln585_fu_901_p2 ^ 1'd1);

assign xor_ln949_fu_1982_p2 = (tmp_20_fu_1975_p3 ^ 1'd1);

assign zext_ln203_1_fu_1695_p1 = add_ln203_fu_1689_p2;

assign zext_ln203_fu_1686_p1 = select_ln318_reg_2297_pp2_iter3_reg;

assign zext_ln295_fu_1027_p1 = select_ln295_1_reg_2143_pp0_iter2_reg;

assign zext_ln305_fu_1347_p1 = select_ln203_reg_2218_pp1_iter2_reg;

assign zext_ln318_1_fu_1427_p1 = select_ln318_fu_1404_p3;

assign zext_ln318_2_fu_1420_p1 = select_ln318_1_fu_1412_p3;

assign zext_ln318_fu_1682_p1 = tmp_17_fu_1675_p3;

assign zext_ln331_fu_1794_p1 = tmp_14_fu_1786_p3;

assign zext_ln461_1_fu_1136_p1 = exp_tmp_V_1_fu_1126_p4;

assign zext_ln461_fu_816_p1 = exp_tmp_V_fu_806_p4;

assign zext_ln586_1_fu_1231_p1 = $unsigned(sext_ln581_1_fu_1218_p1);

assign zext_ln586_fu_911_p1 = $unsigned(sext_ln581_fu_898_p1);

assign zext_ln935_1_fu_1828_p1 = add_ln935_fu_1822_p2;

assign zext_ln935_fu_1818_p1 = select_ln329_fu_1770_p3;

assign zext_ln947_fu_1949_p1 = sub_ln947_reg_2534;

always @ (posedge ap_clk) begin
    zext_ln318_2_reg_2308[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln318_2_reg_2308_pp2_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln318_1_reg_2332[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln318_1_reg_2332_pp2_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //matrixmul_5
