// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MalM_HH_
#define _MalM_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MUSIC_top_dadddsubkb.h"
#include "MUSIC_top_dadd_64cud.h"
#include "MUSIC_top_dsub_64fYi.h"
#include "MUSIC_top_dmul_64dEe.h"
#include "MUSIC_top_mul_mulg8j.h"

namespace ap_rtl {

struct MalM : public sc_module {
    // Port declarations 42
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > A_re_address0;
    sc_out< sc_logic > A_re_ce0;
    sc_in< sc_lv<64> > A_re_q0;
    sc_out< sc_lv<14> > A_re_address1;
    sc_out< sc_logic > A_re_ce1;
    sc_in< sc_lv<64> > A_re_q1;
    sc_in< sc_lv<7> > A_re_offset;
    sc_out< sc_lv<14> > A_im_address0;
    sc_out< sc_logic > A_im_ce0;
    sc_in< sc_lv<64> > A_im_q0;
    sc_out< sc_lv<14> > A_im_address1;
    sc_out< sc_logic > A_im_ce1;
    sc_in< sc_lv<64> > A_im_q1;
    sc_in< sc_lv<7> > A_im_offset;
    sc_in< sc_lv<32> > B_re_offset;
    sc_in< sc_lv<32> > B_im_offset;
    sc_in< sc_lv<64> > cos_theta_re;
    sc_in< sc_lv<64> > cos_theta_im;
    sc_in< sc_lv<64> > sin_theta_re;
    sc_in< sc_lv<64> > sin_theta_im;
    sc_out< sc_lv<7> > C_re_address0;
    sc_out< sc_logic > C_re_ce0;
    sc_out< sc_logic > C_re_we0;
    sc_out< sc_lv<64> > C_re_d0;
    sc_out< sc_lv<7> > C_im_address0;
    sc_out< sc_logic > C_im_ce0;
    sc_out< sc_logic > C_im_we0;
    sc_out< sc_lv<64> > C_im_d0;
    sc_out< sc_lv<7> > D_re_address0;
    sc_out< sc_logic > D_re_ce0;
    sc_out< sc_logic > D_re_we0;
    sc_out< sc_lv<64> > D_re_d0;
    sc_out< sc_lv<7> > D_im_address0;
    sc_out< sc_logic > D_im_ce0;
    sc_out< sc_logic > D_im_we0;
    sc_out< sc_lv<64> > D_im_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    MalM(sc_module_name name);
    SC_HAS_PROCESS(MalM);

    ~MalM();

    sc_trace_file* mVcdFile;

    MUSIC_top_dadddsubkb<1,5,64,64,64>* MUSIC_top_dadddsubkb_U21;
    MUSIC_top_dadd_64cud<1,5,64,64,64>* MUSIC_top_dadd_64cud_U22;
    MUSIC_top_dadddsubkb<1,5,64,64,64>* MUSIC_top_dadddsubkb_U23;
    MUSIC_top_dadd_64cud<1,5,64,64,64>* MUSIC_top_dadd_64cud_U24;
    MUSIC_top_dsub_64fYi<1,5,64,64,64>* MUSIC_top_dsub_64fYi_U25;
    MUSIC_top_dadd_64cud<1,5,64,64,64>* MUSIC_top_dadd_64cud_U26;
    MUSIC_top_dsub_64fYi<1,5,64,64,64>* MUSIC_top_dsub_64fYi_U27;
    MUSIC_top_dadd_64cud<1,5,64,64,64>* MUSIC_top_dadd_64cud_U28;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U29;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U30;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U31;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U32;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U33;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U34;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U35;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U36;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U37;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U38;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U39;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U40;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U41;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U42;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U43;
    MUSIC_top_dmul_64dEe<1,5,64,64,64>* MUSIC_top_dmul_64dEe_U44;
    MUSIC_top_mul_mulg8j<1,1,8,15,15>* MUSIC_top_mul_mulg8j_U45;
    MUSIC_top_mul_mulg8j<1,1,8,15,15>* MUSIC_top_mul_mulg8j_U46;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > mul_ln71_fu_454_p2;
    sc_signal< sc_lv<15> > mul_ln71_reg_494;
    sc_signal< sc_lv<15> > mul_ln71_1_fu_460_p2;
    sc_signal< sc_lv<15> > mul_ln71_1_reg_499;
    sc_signal< sc_lv<14> > mul_ln71_2_fu_342_p2;
    sc_signal< sc_lv<14> > mul_ln71_2_reg_504;
    sc_signal< sc_lv<14> > mul_ln71_3_fu_352_p2;
    sc_signal< sc_lv<14> > mul_ln71_3_reg_509;
    sc_signal< sc_lv<64> > tmp_re_fu_368_p1;
    sc_signal< sc_lv<64> > tmp_re_reg_514;
    sc_signal< sc_lv<64> > tmp_im_fu_382_p1;
    sc_signal< sc_lv<64> > tmp_im_reg_520;
    sc_signal< sc_lv<7> > i_fu_392_p2;
    sc_signal< sc_lv<7> > i_reg_529;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln70_fu_386_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > grp_fu_250_p2;
    sc_signal< sc_lv<64> > m1_reg_586;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > grp_fu_255_p2;
    sc_signal< sc_lv<64> > m2_reg_591;
    sc_signal< sc_lv<64> > grp_fu_260_p2;
    sc_signal< sc_lv<64> > m3_reg_596;
    sc_signal< sc_lv<64> > grp_fu_265_p2;
    sc_signal< sc_lv<64> > m4_reg_601;
    sc_signal< sc_lv<64> > grp_fu_270_p2;
    sc_signal< sc_lv<64> > m1_5_reg_606;
    sc_signal< sc_lv<64> > grp_fu_275_p2;
    sc_signal< sc_lv<64> > m2_5_reg_611;
    sc_signal< sc_lv<64> > grp_fu_280_p2;
    sc_signal< sc_lv<64> > m3_4_reg_616;
    sc_signal< sc_lv<64> > grp_fu_285_p2;
    sc_signal< sc_lv<64> > m4_4_reg_621;
    sc_signal< sc_lv<64> > grp_fu_290_p2;
    sc_signal< sc_lv<64> > m1_6_reg_626;
    sc_signal< sc_lv<64> > grp_fu_295_p2;
    sc_signal< sc_lv<64> > m2_6_reg_631;
    sc_signal< sc_lv<64> > grp_fu_300_p2;
    sc_signal< sc_lv<64> > m3_5_reg_636;
    sc_signal< sc_lv<64> > grp_fu_305_p2;
    sc_signal< sc_lv<64> > m4_5_reg_641;
    sc_signal< sc_lv<64> > grp_fu_310_p2;
    sc_signal< sc_lv<64> > m1_7_reg_646;
    sc_signal< sc_lv<64> > grp_fu_315_p2;
    sc_signal< sc_lv<64> > m2_7_reg_651;
    sc_signal< sc_lv<64> > grp_fu_320_p2;
    sc_signal< sc_lv<64> > m3_6_reg_656;
    sc_signal< sc_lv<64> > grp_fu_325_p2;
    sc_signal< sc_lv<64> > m4_6_reg_661;
    sc_signal< sc_lv<64> > grp_fu_214_p2;
    sc_signal< sc_lv<64> > sum_re_reg_666;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > grp_fu_218_p2;
    sc_signal< sc_lv<64> > sum_im_reg_671;
    sc_signal< sc_lv<64> > grp_fu_222_p2;
    sc_signal< sc_lv<64> > sum_re_5_reg_676;
    sc_signal< sc_lv<64> > grp_fu_226_p2;
    sc_signal< sc_lv<64> > sum_im_4_reg_681;
    sc_signal< sc_lv<64> > grp_fu_230_p2;
    sc_signal< sc_lv<64> > sum_re_6_reg_686;
    sc_signal< sc_lv<64> > grp_fu_234_p2;
    sc_signal< sc_lv<64> > sum_im_5_reg_691;
    sc_signal< sc_lv<64> > grp_fu_238_p2;
    sc_signal< sc_lv<64> > sum_re_7_reg_696;
    sc_signal< sc_lv<64> > grp_fu_242_p2;
    sc_signal< sc_lv<64> > sum_im_6_reg_701;
    sc_signal< sc_lv<7> > i_0_reg_202;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > zext_ln71_5_fu_411_p1;
    sc_signal< sc_lv<64> > sext_ln71_fu_421_p1;
    sc_signal< sc_lv<64> > zext_ln71_6_fu_431_p1;
    sc_signal< sc_lv<64> > sext_ln71_1_fu_441_p1;
    sc_signal< sc_lv<64> > zext_ln71_fu_446_p1;
    sc_signal< sc_lv<64> > grp_fu_214_p0;
    sc_signal< sc_lv<64> > grp_fu_214_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > grp_fu_218_p0;
    sc_signal< sc_lv<64> > grp_fu_218_p1;
    sc_signal< sc_lv<64> > grp_fu_222_p0;
    sc_signal< sc_lv<64> > grp_fu_222_p1;
    sc_signal< sc_lv<64> > grp_fu_226_p0;
    sc_signal< sc_lv<64> > grp_fu_226_p1;
    sc_signal< sc_lv<7> > mul_ln71_2_fu_342_p1;
    sc_signal< sc_lv<7> > mul_ln71_3_fu_352_p1;
    sc_signal< sc_lv<64> > bitcast_ln211_fu_358_p1;
    sc_signal< sc_lv<64> > xor_ln211_fu_362_p2;
    sc_signal< sc_lv<64> > bitcast_ln212_fu_372_p1;
    sc_signal< sc_lv<64> > xor_ln212_fu_376_p2;
    sc_signal< sc_lv<14> > zext_ln71_4_fu_402_p1;
    sc_signal< sc_lv<14> > add_ln71_fu_406_p2;
    sc_signal< sc_lv<15> > zext_ln71_3_fu_398_p1;
    sc_signal< sc_lv<15> > add_ln71_1_fu_416_p2;
    sc_signal< sc_lv<14> > add_ln71_2_fu_426_p2;
    sc_signal< sc_lv<15> > add_ln71_3_fu_436_p2;
    sc_signal< sc_lv<8> > mul_ln71_fu_454_p0;
    sc_signal< sc_lv<15> > mul_ln71_fu_454_p1;
    sc_signal< sc_lv<8> > mul_ln71_1_fu_460_p0;
    sc_signal< sc_lv<15> > mul_ln71_1_fu_460_p1;
    sc_signal< sc_lv<2> > grp_fu_214_opcode;
    sc_signal< sc_lv<2> > grp_fu_222_opcode;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    sc_signal< sc_lv<14> > mul_ln71_2_fu_342_p10;
    sc_signal< sc_lv<14> > mul_ln71_3_fu_352_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<14> ap_const_lv14_64;
    static const sc_lv<64> ap_const_lv64_8000000000000000;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<15> ap_const_lv15_64;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_im_address0();
    void thread_A_im_address1();
    void thread_A_im_ce0();
    void thread_A_im_ce1();
    void thread_A_re_address0();
    void thread_A_re_address1();
    void thread_A_re_ce0();
    void thread_A_re_ce1();
    void thread_C_im_address0();
    void thread_C_im_ce0();
    void thread_C_im_d0();
    void thread_C_im_we0();
    void thread_C_re_address0();
    void thread_C_re_ce0();
    void thread_C_re_d0();
    void thread_C_re_we0();
    void thread_D_im_address0();
    void thread_D_im_ce0();
    void thread_D_im_d0();
    void thread_D_im_we0();
    void thread_D_re_address0();
    void thread_D_re_ce0();
    void thread_D_re_d0();
    void thread_D_re_we0();
    void thread_add_ln71_1_fu_416_p2();
    void thread_add_ln71_2_fu_426_p2();
    void thread_add_ln71_3_fu_436_p2();
    void thread_add_ln71_fu_406_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln211_fu_358_p1();
    void thread_bitcast_ln212_fu_372_p1();
    void thread_grp_fu_214_opcode();
    void thread_grp_fu_214_p0();
    void thread_grp_fu_214_p1();
    void thread_grp_fu_218_p0();
    void thread_grp_fu_218_p1();
    void thread_grp_fu_222_opcode();
    void thread_grp_fu_222_p0();
    void thread_grp_fu_222_p1();
    void thread_grp_fu_226_p0();
    void thread_grp_fu_226_p1();
    void thread_i_fu_392_p2();
    void thread_icmp_ln70_fu_386_p2();
    void thread_mul_ln71_1_fu_460_p0();
    void thread_mul_ln71_1_fu_460_p1();
    void thread_mul_ln71_2_fu_342_p1();
    void thread_mul_ln71_2_fu_342_p10();
    void thread_mul_ln71_2_fu_342_p2();
    void thread_mul_ln71_3_fu_352_p1();
    void thread_mul_ln71_3_fu_352_p10();
    void thread_mul_ln71_3_fu_352_p2();
    void thread_mul_ln71_fu_454_p0();
    void thread_mul_ln71_fu_454_p1();
    void thread_sext_ln71_1_fu_441_p1();
    void thread_sext_ln71_fu_421_p1();
    void thread_tmp_im_fu_382_p1();
    void thread_tmp_re_fu_368_p1();
    void thread_xor_ln211_fu_362_p2();
    void thread_xor_ln212_fu_376_p2();
    void thread_zext_ln71_3_fu_398_p1();
    void thread_zext_ln71_4_fu_402_p1();
    void thread_zext_ln71_5_fu_411_p1();
    void thread_zext_ln71_6_fu_431_p1();
    void thread_zext_ln71_fu_446_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
