// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module matrixmul_8_unopt_matrixmul_8_unopt_Pipeline_loop_input_A2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_A_TVALID,
        in_A_TDATA,
        in_A_TREADY,
        in_A_TKEEP,
        in_A_TSTRB,
        in_A_TLAST,
        row,
        mux_case_7228899_out,
        mux_case_7228899_out_ap_vld,
        mux_case_6227892_out,
        mux_case_6227892_out_ap_vld,
        mux_case_5226885_out,
        mux_case_5226885_out_ap_vld,
        mux_case_4225878_out,
        mux_case_4225878_out_ap_vld,
        mux_case_3224871_out,
        mux_case_3224871_out_ap_vld,
        mux_case_2223864_out,
        mux_case_2223864_out_ap_vld,
        mux_case_1222857_out,
        mux_case_1222857_out_ap_vld,
        mux_case_0221850_out,
        mux_case_0221850_out_ap_vld,
        mux_case_7219843_out,
        mux_case_7219843_out_ap_vld,
        mux_case_6218836_out,
        mux_case_6218836_out_ap_vld,
        mux_case_5217829_out,
        mux_case_5217829_out_ap_vld,
        mux_case_4216822_out,
        mux_case_4216822_out_ap_vld,
        mux_case_3215815_out,
        mux_case_3215815_out_ap_vld,
        mux_case_2214808_out,
        mux_case_2214808_out_ap_vld,
        mux_case_1213801_out,
        mux_case_1213801_out_ap_vld,
        mux_case_0212794_out,
        mux_case_0212794_out_ap_vld,
        mux_case_7210787_out,
        mux_case_7210787_out_ap_vld,
        mux_case_6209780_out,
        mux_case_6209780_out_ap_vld,
        mux_case_5208773_out,
        mux_case_5208773_out_ap_vld,
        mux_case_4207766_out,
        mux_case_4207766_out_ap_vld,
        mux_case_3206759_out,
        mux_case_3206759_out_ap_vld,
        mux_case_2205752_out,
        mux_case_2205752_out_ap_vld,
        mux_case_1204745_out,
        mux_case_1204745_out_ap_vld,
        mux_case_0203738_out,
        mux_case_0203738_out_ap_vld,
        mux_case_7201731_out,
        mux_case_7201731_out_ap_vld,
        mux_case_6200724_out,
        mux_case_6200724_out_ap_vld,
        mux_case_5199717_out,
        mux_case_5199717_out_ap_vld,
        mux_case_4198710_out,
        mux_case_4198710_out_ap_vld,
        mux_case_3197703_out,
        mux_case_3197703_out_ap_vld,
        mux_case_2196696_out,
        mux_case_2196696_out_ap_vld,
        mux_case_1195689_out,
        mux_case_1195689_out_ap_vld,
        mux_case_0194682_out,
        mux_case_0194682_out_ap_vld,
        mux_case_7192675_out,
        mux_case_7192675_out_ap_vld,
        mux_case_6191668_out,
        mux_case_6191668_out_ap_vld,
        mux_case_5190661_out,
        mux_case_5190661_out_ap_vld,
        mux_case_4189654_out,
        mux_case_4189654_out_ap_vld,
        mux_case_3188647_out,
        mux_case_3188647_out_ap_vld,
        mux_case_2187640_out,
        mux_case_2187640_out_ap_vld,
        mux_case_1186633_out,
        mux_case_1186633_out_ap_vld,
        mux_case_0185626_out,
        mux_case_0185626_out_ap_vld,
        mux_case_7183619_out,
        mux_case_7183619_out_ap_vld,
        mux_case_6182612_out,
        mux_case_6182612_out_ap_vld,
        mux_case_5181605_out,
        mux_case_5181605_out_ap_vld,
        mux_case_4180598_out,
        mux_case_4180598_out_ap_vld,
        mux_case_3179591_out,
        mux_case_3179591_out_ap_vld,
        mux_case_2178584_out,
        mux_case_2178584_out_ap_vld,
        mux_case_1177577_out,
        mux_case_1177577_out_ap_vld,
        mux_case_0176570_out,
        mux_case_0176570_out_ap_vld,
        mux_case_7174563_out,
        mux_case_7174563_out_ap_vld,
        mux_case_6173556_out,
        mux_case_6173556_out_ap_vld,
        mux_case_5172549_out,
        mux_case_5172549_out_ap_vld,
        mux_case_4171542_out,
        mux_case_4171542_out_ap_vld,
        mux_case_3170535_out,
        mux_case_3170535_out_ap_vld,
        mux_case_2169528_out,
        mux_case_2169528_out_ap_vld,
        mux_case_1168521_out,
        mux_case_1168521_out_ap_vld,
        mux_case_0167514_out,
        mux_case_0167514_out_ap_vld,
        mux_case_7506_out,
        mux_case_7506_out_ap_vld,
        mux_case_6499_out,
        mux_case_6499_out_ap_vld,
        mux_case_5492_out,
        mux_case_5492_out_ap_vld,
        mux_case_4485_out,
        mux_case_4485_out_ap_vld,
        mux_case_3478_out,
        mux_case_3478_out_ap_vld,
        mux_case_2471_out,
        mux_case_2471_out_ap_vld,
        mux_case_1464_out,
        mux_case_1464_out_ap_vld,
        mux_case_0457_out,
        mux_case_0457_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_A_TVALID;
input  [31:0] in_A_TDATA;
output   in_A_TREADY;
input  [3:0] in_A_TKEEP;
input  [3:0] in_A_TSTRB;
input  [0:0] in_A_TLAST;
input  [2:0] row;
output  [31:0] mux_case_7228899_out;
output   mux_case_7228899_out_ap_vld;
output  [31:0] mux_case_6227892_out;
output   mux_case_6227892_out_ap_vld;
output  [31:0] mux_case_5226885_out;
output   mux_case_5226885_out_ap_vld;
output  [31:0] mux_case_4225878_out;
output   mux_case_4225878_out_ap_vld;
output  [31:0] mux_case_3224871_out;
output   mux_case_3224871_out_ap_vld;
output  [31:0] mux_case_2223864_out;
output   mux_case_2223864_out_ap_vld;
output  [31:0] mux_case_1222857_out;
output   mux_case_1222857_out_ap_vld;
output  [31:0] mux_case_0221850_out;
output   mux_case_0221850_out_ap_vld;
output  [31:0] mux_case_7219843_out;
output   mux_case_7219843_out_ap_vld;
output  [31:0] mux_case_6218836_out;
output   mux_case_6218836_out_ap_vld;
output  [31:0] mux_case_5217829_out;
output   mux_case_5217829_out_ap_vld;
output  [31:0] mux_case_4216822_out;
output   mux_case_4216822_out_ap_vld;
output  [31:0] mux_case_3215815_out;
output   mux_case_3215815_out_ap_vld;
output  [31:0] mux_case_2214808_out;
output   mux_case_2214808_out_ap_vld;
output  [31:0] mux_case_1213801_out;
output   mux_case_1213801_out_ap_vld;
output  [31:0] mux_case_0212794_out;
output   mux_case_0212794_out_ap_vld;
output  [31:0] mux_case_7210787_out;
output   mux_case_7210787_out_ap_vld;
output  [31:0] mux_case_6209780_out;
output   mux_case_6209780_out_ap_vld;
output  [31:0] mux_case_5208773_out;
output   mux_case_5208773_out_ap_vld;
output  [31:0] mux_case_4207766_out;
output   mux_case_4207766_out_ap_vld;
output  [31:0] mux_case_3206759_out;
output   mux_case_3206759_out_ap_vld;
output  [31:0] mux_case_2205752_out;
output   mux_case_2205752_out_ap_vld;
output  [31:0] mux_case_1204745_out;
output   mux_case_1204745_out_ap_vld;
output  [31:0] mux_case_0203738_out;
output   mux_case_0203738_out_ap_vld;
output  [31:0] mux_case_7201731_out;
output   mux_case_7201731_out_ap_vld;
output  [31:0] mux_case_6200724_out;
output   mux_case_6200724_out_ap_vld;
output  [31:0] mux_case_5199717_out;
output   mux_case_5199717_out_ap_vld;
output  [31:0] mux_case_4198710_out;
output   mux_case_4198710_out_ap_vld;
output  [31:0] mux_case_3197703_out;
output   mux_case_3197703_out_ap_vld;
output  [31:0] mux_case_2196696_out;
output   mux_case_2196696_out_ap_vld;
output  [31:0] mux_case_1195689_out;
output   mux_case_1195689_out_ap_vld;
output  [31:0] mux_case_0194682_out;
output   mux_case_0194682_out_ap_vld;
output  [31:0] mux_case_7192675_out;
output   mux_case_7192675_out_ap_vld;
output  [31:0] mux_case_6191668_out;
output   mux_case_6191668_out_ap_vld;
output  [31:0] mux_case_5190661_out;
output   mux_case_5190661_out_ap_vld;
output  [31:0] mux_case_4189654_out;
output   mux_case_4189654_out_ap_vld;
output  [31:0] mux_case_3188647_out;
output   mux_case_3188647_out_ap_vld;
output  [31:0] mux_case_2187640_out;
output   mux_case_2187640_out_ap_vld;
output  [31:0] mux_case_1186633_out;
output   mux_case_1186633_out_ap_vld;
output  [31:0] mux_case_0185626_out;
output   mux_case_0185626_out_ap_vld;
output  [31:0] mux_case_7183619_out;
output   mux_case_7183619_out_ap_vld;
output  [31:0] mux_case_6182612_out;
output   mux_case_6182612_out_ap_vld;
output  [31:0] mux_case_5181605_out;
output   mux_case_5181605_out_ap_vld;
output  [31:0] mux_case_4180598_out;
output   mux_case_4180598_out_ap_vld;
output  [31:0] mux_case_3179591_out;
output   mux_case_3179591_out_ap_vld;
output  [31:0] mux_case_2178584_out;
output   mux_case_2178584_out_ap_vld;
output  [31:0] mux_case_1177577_out;
output   mux_case_1177577_out_ap_vld;
output  [31:0] mux_case_0176570_out;
output   mux_case_0176570_out_ap_vld;
output  [31:0] mux_case_7174563_out;
output   mux_case_7174563_out_ap_vld;
output  [31:0] mux_case_6173556_out;
output   mux_case_6173556_out_ap_vld;
output  [31:0] mux_case_5172549_out;
output   mux_case_5172549_out_ap_vld;
output  [31:0] mux_case_4171542_out;
output   mux_case_4171542_out_ap_vld;
output  [31:0] mux_case_3170535_out;
output   mux_case_3170535_out_ap_vld;
output  [31:0] mux_case_2169528_out;
output   mux_case_2169528_out_ap_vld;
output  [31:0] mux_case_1168521_out;
output   mux_case_1168521_out_ap_vld;
output  [31:0] mux_case_0167514_out;
output   mux_case_0167514_out_ap_vld;
output  [31:0] mux_case_7506_out;
output   mux_case_7506_out_ap_vld;
output  [31:0] mux_case_6499_out;
output   mux_case_6499_out_ap_vld;
output  [31:0] mux_case_5492_out;
output   mux_case_5492_out_ap_vld;
output  [31:0] mux_case_4485_out;
output   mux_case_4485_out_ap_vld;
output  [31:0] mux_case_3478_out;
output   mux_case_3478_out_ap_vld;
output  [31:0] mux_case_2471_out;
output   mux_case_2471_out_ap_vld;
output  [31:0] mux_case_1464_out;
output   mux_case_1464_out_ap_vld;
output  [31:0] mux_case_0457_out;
output   mux_case_0457_out_ap_vld;

reg ap_idle;
reg in_A_TREADY;
reg mux_case_7228899_out_ap_vld;
reg mux_case_6227892_out_ap_vld;
reg mux_case_5226885_out_ap_vld;
reg mux_case_4225878_out_ap_vld;
reg mux_case_3224871_out_ap_vld;
reg mux_case_2223864_out_ap_vld;
reg mux_case_1222857_out_ap_vld;
reg mux_case_0221850_out_ap_vld;
reg mux_case_7219843_out_ap_vld;
reg mux_case_6218836_out_ap_vld;
reg mux_case_5217829_out_ap_vld;
reg mux_case_4216822_out_ap_vld;
reg mux_case_3215815_out_ap_vld;
reg mux_case_2214808_out_ap_vld;
reg mux_case_1213801_out_ap_vld;
reg mux_case_0212794_out_ap_vld;
reg mux_case_7210787_out_ap_vld;
reg mux_case_6209780_out_ap_vld;
reg mux_case_5208773_out_ap_vld;
reg mux_case_4207766_out_ap_vld;
reg mux_case_3206759_out_ap_vld;
reg mux_case_2205752_out_ap_vld;
reg mux_case_1204745_out_ap_vld;
reg mux_case_0203738_out_ap_vld;
reg mux_case_7201731_out_ap_vld;
reg mux_case_6200724_out_ap_vld;
reg mux_case_5199717_out_ap_vld;
reg mux_case_4198710_out_ap_vld;
reg mux_case_3197703_out_ap_vld;
reg mux_case_2196696_out_ap_vld;
reg mux_case_1195689_out_ap_vld;
reg mux_case_0194682_out_ap_vld;
reg mux_case_7192675_out_ap_vld;
reg mux_case_6191668_out_ap_vld;
reg mux_case_5190661_out_ap_vld;
reg mux_case_4189654_out_ap_vld;
reg mux_case_3188647_out_ap_vld;
reg mux_case_2187640_out_ap_vld;
reg mux_case_1186633_out_ap_vld;
reg mux_case_0185626_out_ap_vld;
reg mux_case_7183619_out_ap_vld;
reg mux_case_6182612_out_ap_vld;
reg mux_case_5181605_out_ap_vld;
reg mux_case_4180598_out_ap_vld;
reg mux_case_3179591_out_ap_vld;
reg mux_case_2178584_out_ap_vld;
reg mux_case_1177577_out_ap_vld;
reg mux_case_0176570_out_ap_vld;
reg mux_case_7174563_out_ap_vld;
reg mux_case_6173556_out_ap_vld;
reg mux_case_5172549_out_ap_vld;
reg mux_case_4171542_out_ap_vld;
reg mux_case_3170535_out_ap_vld;
reg mux_case_2169528_out_ap_vld;
reg mux_case_1168521_out_ap_vld;
reg mux_case_0167514_out_ap_vld;
reg mux_case_7506_out_ap_vld;
reg mux_case_6499_out_ap_vld;
reg mux_case_5492_out_ap_vld;
reg mux_case_4485_out_ap_vld;
reg mux_case_3478_out_ap_vld;
reg mux_case_2471_out_ap_vld;
reg mux_case_1464_out_ap_vld;
reg mux_case_0457_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln21_fu_222_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_A_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
wire   [2:0] row_read_reg_642;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [2:0] trunc_ln21_fu_234_p1;
reg   [2:0] trunc_ln21_reg_649;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] local_stream_data_fu_247_p1;
reg   [3:0] col_fu_192;
wire   [3:0] add_ln21_fu_228_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_col_2;
wire    ap_block_pp0_stage0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 col_fu_192 = 4'd0;
#0 ap_done_reg = 1'b0;
end

matrixmul_8_unopt_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln21_fu_222_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_fu_192 <= add_ln21_fu_228_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_fu_192 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln21_reg_649 <= trunc_ln21_fu_234_p1;
    end
end

always @ (*) begin
    if (((icmp_ln21_fu_222_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_col_2 = col_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_A_TDATA_blk_n = in_A_TVALID;
    end else begin
        in_A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_A_TREADY = 1'b1;
    end else begin
        in_A_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd1))) begin
        mux_case_0167514_out_ap_vld = 1'b1;
    end else begin
        mux_case_0167514_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd2))) begin
        mux_case_0176570_out_ap_vld = 1'b1;
    end else begin
        mux_case_0176570_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd3))) begin
        mux_case_0185626_out_ap_vld = 1'b1;
    end else begin
        mux_case_0185626_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd4))) begin
        mux_case_0194682_out_ap_vld = 1'b1;
    end else begin
        mux_case_0194682_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd5))) begin
        mux_case_0203738_out_ap_vld = 1'b1;
    end else begin
        mux_case_0203738_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd6))) begin
        mux_case_0212794_out_ap_vld = 1'b1;
    end else begin
        mux_case_0212794_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd7))) begin
        mux_case_0221850_out_ap_vld = 1'b1;
    end else begin
        mux_case_0221850_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd0) & (row_read_reg_642 == 3'd0))) begin
        mux_case_0457_out_ap_vld = 1'b1;
    end else begin
        mux_case_0457_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd1))) begin
        mux_case_1168521_out_ap_vld = 1'b1;
    end else begin
        mux_case_1168521_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd2))) begin
        mux_case_1177577_out_ap_vld = 1'b1;
    end else begin
        mux_case_1177577_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd3))) begin
        mux_case_1186633_out_ap_vld = 1'b1;
    end else begin
        mux_case_1186633_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd4))) begin
        mux_case_1195689_out_ap_vld = 1'b1;
    end else begin
        mux_case_1195689_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd5))) begin
        mux_case_1204745_out_ap_vld = 1'b1;
    end else begin
        mux_case_1204745_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd6))) begin
        mux_case_1213801_out_ap_vld = 1'b1;
    end else begin
        mux_case_1213801_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd7))) begin
        mux_case_1222857_out_ap_vld = 1'b1;
    end else begin
        mux_case_1222857_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd1) & (row_read_reg_642 == 3'd0))) begin
        mux_case_1464_out_ap_vld = 1'b1;
    end else begin
        mux_case_1464_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd1))) begin
        mux_case_2169528_out_ap_vld = 1'b1;
    end else begin
        mux_case_2169528_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd2))) begin
        mux_case_2178584_out_ap_vld = 1'b1;
    end else begin
        mux_case_2178584_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd3))) begin
        mux_case_2187640_out_ap_vld = 1'b1;
    end else begin
        mux_case_2187640_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd4))) begin
        mux_case_2196696_out_ap_vld = 1'b1;
    end else begin
        mux_case_2196696_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd5))) begin
        mux_case_2205752_out_ap_vld = 1'b1;
    end else begin
        mux_case_2205752_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd6))) begin
        mux_case_2214808_out_ap_vld = 1'b1;
    end else begin
        mux_case_2214808_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd7))) begin
        mux_case_2223864_out_ap_vld = 1'b1;
    end else begin
        mux_case_2223864_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd2) & (row_read_reg_642 == 3'd0))) begin
        mux_case_2471_out_ap_vld = 1'b1;
    end else begin
        mux_case_2471_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd1))) begin
        mux_case_3170535_out_ap_vld = 1'b1;
    end else begin
        mux_case_3170535_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd2))) begin
        mux_case_3179591_out_ap_vld = 1'b1;
    end else begin
        mux_case_3179591_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd3))) begin
        mux_case_3188647_out_ap_vld = 1'b1;
    end else begin
        mux_case_3188647_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd4))) begin
        mux_case_3197703_out_ap_vld = 1'b1;
    end else begin
        mux_case_3197703_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd5))) begin
        mux_case_3206759_out_ap_vld = 1'b1;
    end else begin
        mux_case_3206759_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd6))) begin
        mux_case_3215815_out_ap_vld = 1'b1;
    end else begin
        mux_case_3215815_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd7))) begin
        mux_case_3224871_out_ap_vld = 1'b1;
    end else begin
        mux_case_3224871_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd3) & (row_read_reg_642 == 3'd0))) begin
        mux_case_3478_out_ap_vld = 1'b1;
    end else begin
        mux_case_3478_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd1))) begin
        mux_case_4171542_out_ap_vld = 1'b1;
    end else begin
        mux_case_4171542_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd2))) begin
        mux_case_4180598_out_ap_vld = 1'b1;
    end else begin
        mux_case_4180598_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd3))) begin
        mux_case_4189654_out_ap_vld = 1'b1;
    end else begin
        mux_case_4189654_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd4))) begin
        mux_case_4198710_out_ap_vld = 1'b1;
    end else begin
        mux_case_4198710_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd5))) begin
        mux_case_4207766_out_ap_vld = 1'b1;
    end else begin
        mux_case_4207766_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd6))) begin
        mux_case_4216822_out_ap_vld = 1'b1;
    end else begin
        mux_case_4216822_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd7))) begin
        mux_case_4225878_out_ap_vld = 1'b1;
    end else begin
        mux_case_4225878_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd4) & (row_read_reg_642 == 3'd0))) begin
        mux_case_4485_out_ap_vld = 1'b1;
    end else begin
        mux_case_4485_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd1))) begin
        mux_case_5172549_out_ap_vld = 1'b1;
    end else begin
        mux_case_5172549_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd2))) begin
        mux_case_5181605_out_ap_vld = 1'b1;
    end else begin
        mux_case_5181605_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd3))) begin
        mux_case_5190661_out_ap_vld = 1'b1;
    end else begin
        mux_case_5190661_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd4))) begin
        mux_case_5199717_out_ap_vld = 1'b1;
    end else begin
        mux_case_5199717_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd5))) begin
        mux_case_5208773_out_ap_vld = 1'b1;
    end else begin
        mux_case_5208773_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd6))) begin
        mux_case_5217829_out_ap_vld = 1'b1;
    end else begin
        mux_case_5217829_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd7))) begin
        mux_case_5226885_out_ap_vld = 1'b1;
    end else begin
        mux_case_5226885_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd5) & (row_read_reg_642 == 3'd0))) begin
        mux_case_5492_out_ap_vld = 1'b1;
    end else begin
        mux_case_5492_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd1))) begin
        mux_case_6173556_out_ap_vld = 1'b1;
    end else begin
        mux_case_6173556_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd2))) begin
        mux_case_6182612_out_ap_vld = 1'b1;
    end else begin
        mux_case_6182612_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd3))) begin
        mux_case_6191668_out_ap_vld = 1'b1;
    end else begin
        mux_case_6191668_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd4))) begin
        mux_case_6200724_out_ap_vld = 1'b1;
    end else begin
        mux_case_6200724_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd5))) begin
        mux_case_6209780_out_ap_vld = 1'b1;
    end else begin
        mux_case_6209780_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd6))) begin
        mux_case_6218836_out_ap_vld = 1'b1;
    end else begin
        mux_case_6218836_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd7))) begin
        mux_case_6227892_out_ap_vld = 1'b1;
    end else begin
        mux_case_6227892_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd6) & (row_read_reg_642 == 3'd0))) begin
        mux_case_6499_out_ap_vld = 1'b1;
    end else begin
        mux_case_6499_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd1))) begin
        mux_case_7174563_out_ap_vld = 1'b1;
    end else begin
        mux_case_7174563_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd2))) begin
        mux_case_7183619_out_ap_vld = 1'b1;
    end else begin
        mux_case_7183619_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd3))) begin
        mux_case_7192675_out_ap_vld = 1'b1;
    end else begin
        mux_case_7192675_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd4))) begin
        mux_case_7201731_out_ap_vld = 1'b1;
    end else begin
        mux_case_7201731_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd5))) begin
        mux_case_7210787_out_ap_vld = 1'b1;
    end else begin
        mux_case_7210787_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd6))) begin
        mux_case_7219843_out_ap_vld = 1'b1;
    end else begin
        mux_case_7219843_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd7))) begin
        mux_case_7228899_out_ap_vld = 1'b1;
    end else begin
        mux_case_7228899_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln21_reg_649 == 3'd7) & (row_read_reg_642 == 3'd0))) begin
        mux_case_7506_out_ap_vld = 1'b1;
    end else begin
        mux_case_7506_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_228_p2 = (ap_sig_allocacmp_col_2 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_A_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((in_A_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_A_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln21_fu_222_p2 = ((ap_sig_allocacmp_col_2 == 4'd8) ? 1'b1 : 1'b0);

assign local_stream_data_fu_247_p1 = in_A_TDATA;

assign mux_case_0167514_out = local_stream_data_fu_247_p1;

assign mux_case_0176570_out = local_stream_data_fu_247_p1;

assign mux_case_0185626_out = local_stream_data_fu_247_p1;

assign mux_case_0194682_out = local_stream_data_fu_247_p1;

assign mux_case_0203738_out = local_stream_data_fu_247_p1;

assign mux_case_0212794_out = local_stream_data_fu_247_p1;

assign mux_case_0221850_out = local_stream_data_fu_247_p1;

assign mux_case_0457_out = local_stream_data_fu_247_p1;

assign mux_case_1168521_out = local_stream_data_fu_247_p1;

assign mux_case_1177577_out = local_stream_data_fu_247_p1;

assign mux_case_1186633_out = local_stream_data_fu_247_p1;

assign mux_case_1195689_out = local_stream_data_fu_247_p1;

assign mux_case_1204745_out = local_stream_data_fu_247_p1;

assign mux_case_1213801_out = local_stream_data_fu_247_p1;

assign mux_case_1222857_out = local_stream_data_fu_247_p1;

assign mux_case_1464_out = local_stream_data_fu_247_p1;

assign mux_case_2169528_out = local_stream_data_fu_247_p1;

assign mux_case_2178584_out = local_stream_data_fu_247_p1;

assign mux_case_2187640_out = local_stream_data_fu_247_p1;

assign mux_case_2196696_out = local_stream_data_fu_247_p1;

assign mux_case_2205752_out = local_stream_data_fu_247_p1;

assign mux_case_2214808_out = local_stream_data_fu_247_p1;

assign mux_case_2223864_out = local_stream_data_fu_247_p1;

assign mux_case_2471_out = local_stream_data_fu_247_p1;

assign mux_case_3170535_out = local_stream_data_fu_247_p1;

assign mux_case_3179591_out = local_stream_data_fu_247_p1;

assign mux_case_3188647_out = local_stream_data_fu_247_p1;

assign mux_case_3197703_out = local_stream_data_fu_247_p1;

assign mux_case_3206759_out = local_stream_data_fu_247_p1;

assign mux_case_3215815_out = local_stream_data_fu_247_p1;

assign mux_case_3224871_out = local_stream_data_fu_247_p1;

assign mux_case_3478_out = local_stream_data_fu_247_p1;

assign mux_case_4171542_out = local_stream_data_fu_247_p1;

assign mux_case_4180598_out = local_stream_data_fu_247_p1;

assign mux_case_4189654_out = local_stream_data_fu_247_p1;

assign mux_case_4198710_out = local_stream_data_fu_247_p1;

assign mux_case_4207766_out = local_stream_data_fu_247_p1;

assign mux_case_4216822_out = local_stream_data_fu_247_p1;

assign mux_case_4225878_out = local_stream_data_fu_247_p1;

assign mux_case_4485_out = local_stream_data_fu_247_p1;

assign mux_case_5172549_out = local_stream_data_fu_247_p1;

assign mux_case_5181605_out = local_stream_data_fu_247_p1;

assign mux_case_5190661_out = local_stream_data_fu_247_p1;

assign mux_case_5199717_out = local_stream_data_fu_247_p1;

assign mux_case_5208773_out = local_stream_data_fu_247_p1;

assign mux_case_5217829_out = local_stream_data_fu_247_p1;

assign mux_case_5226885_out = local_stream_data_fu_247_p1;

assign mux_case_5492_out = local_stream_data_fu_247_p1;

assign mux_case_6173556_out = local_stream_data_fu_247_p1;

assign mux_case_6182612_out = local_stream_data_fu_247_p1;

assign mux_case_6191668_out = local_stream_data_fu_247_p1;

assign mux_case_6200724_out = local_stream_data_fu_247_p1;

assign mux_case_6209780_out = local_stream_data_fu_247_p1;

assign mux_case_6218836_out = local_stream_data_fu_247_p1;

assign mux_case_6227892_out = local_stream_data_fu_247_p1;

assign mux_case_6499_out = local_stream_data_fu_247_p1;

assign mux_case_7174563_out = local_stream_data_fu_247_p1;

assign mux_case_7183619_out = local_stream_data_fu_247_p1;

assign mux_case_7192675_out = local_stream_data_fu_247_p1;

assign mux_case_7201731_out = local_stream_data_fu_247_p1;

assign mux_case_7210787_out = local_stream_data_fu_247_p1;

assign mux_case_7219843_out = local_stream_data_fu_247_p1;

assign mux_case_7228899_out = local_stream_data_fu_247_p1;

assign mux_case_7506_out = local_stream_data_fu_247_p1;

assign row_read_reg_642 = row;

assign trunc_ln21_fu_234_p1 = ap_sig_allocacmp_col_2[2:0];

endmodule //matrixmul_8_unopt_matrixmul_8_unopt_Pipeline_loop_input_A2
