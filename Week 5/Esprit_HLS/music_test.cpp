#include "music.h"
#include <stdio.h>
#include <string>
#include <vector>
#include <fstream>
#include <vector>
#include <algorithm> //for find
#include <cmath>     // for abs
#include <iostream>
#include <limits>

using namespace std;

int main() {

	// Input data starts form here. comment out the packet size you want to use

	// 200 packets
    DATA_1 real_in[X] = {1.66948300e-02,  1.66584703e-02,  1.65523031e-02,  1.63785370e-02,   1.61360039e-02,  1.58264420e-02,  1.54488800e-02,  1.50026281e-02,   1.45095084e-02,  1.39494338e-02,  1.33332335e-02,  1.26735232e-02,   1.19576536e-02,  1.12067647e-02,  1.04139163e-02,  9.58632860e-03,   8.72638476e-03,  7.83826094e-03,  6.93559689e-03,  6.01546244e-03,   5.09153375e-03,  4.15190745e-03,  3.21340041e-03,  2.28464942e-03,   1.36290043e-03,  4.56673825e-04, -4.28173366e-04, -1.29757094e-03,  -2.13540623e-03, -2.94246300e-03, -3.71911057e-03, -4.45316527e-03,  -5.14795168e-03, -5.79639259e-03, -6.40391068e-03, -6.95926193e-03,  -7.46684683e-03, -7.92211652e-03, -8.32346246e-03, -8.66868353e-03,  -8.96094813e-03, -9.20702955e-03, -9.39315174e-03, -9.53268832e-03,  -9.61946226e-03, -9.65538317e-03, -9.64576342e-03, -9.59365431e-03,  -9.49121081e-03, -9.35692166e-03, -9.17491386e-03, -8.96879986e-03,  -8.72553428e-03, -8.45677213e-03, -8.16796138e-03, -7.85009049e-03,  -7.52380301e-03, -7.17860767e-03, -6.82684737e-03, -6.46965132e-03,  -6.11215433e-03, -5.75657262e-03, -5.40604151e-03, -5.06393856e-03,  -4.73792245e-03, -4.42671557e-03, -4.12894472e-03, -3.85271457e-03,  -3.60290042e-03, -3.37778253e-03, -3.16929303e-03, -3.00610542e-03,  -2.85513602e-03, -2.74220420e-03, -2.66181097e-03, -2.60956451e-03,  -2.59171284e-03, -2.60124539e-03, -2.63734426e-03, -2.70627725e-03,  -2.80346916e-03, -2.91505909e-03, -3.06201144e-03, -3.22417042e-03,  -3.40849968e-03, -3.60152959e-03, -3.81446950e-03, -4.03221422e-03,  -4.26373109e-03, -4.49196715e-03, -4.72215212e-03, -4.95257347e-03,  -5.16652072e-03, -5.37624183e-03, -5.57207644e-03, -5.74250450e-03,  -5.90205773e-03, -6.02252725e-03, -6.12845669e-03, -6.20256314e-03,  -6.24264652e-03, -6.24361154e-03, -6.20421983e-03, -6.13074684e-03,  -6.01427934e-03, -5.84764855e-03, -5.64684535e-03, -5.38983730e-03,  -5.09842858e-03, -4.75249096e-03, -4.36619928e-03, -3.92756509e-03,  -3.44913708e-03, -2.92338063e-03, -2.36317649e-03, -1.75940509e-03,  -1.12402636e-03, -4.44896056e-04,  2.56802105e-04,  9.93258617e-04,   1.75335529e-03,  2.53019417e-03,  3.32915346e-03,  4.13429271e-03,   4.95512247e-03,  5.77259680e-03,  6.59737658e-03,  7.41315968e-03,   8.21995269e-03,  9.00636737e-03,  9.78047783e-03,  1.05320020e-02,   1.12483277e-02,  1.19295356e-02,  1.25741362e-02,  1.31877589e-02,   1.37428929e-02,  1.42623007e-02,  1.47161318e-02,  1.51192328e-02,   1.54592531e-02,  1.57454800e-02,  1.59606126e-02,  1.61136725e-02,   1.62002708e-02,  1.62166342e-02,  1.61641624e-02,  1.60408953e-02,   1.58493858e-02,  1.55949761e-02,  1.52655818e-02,  1.48736409e-02,   1.44164059e-02,  1.38975495e-02,  1.33128439e-02,  1.26779990e-02,   1.19802837e-02,  1.12432630e-02,  1.04502036e-02,  9.62082982e-03,   8.74899798e-03,  7.84125672e-03,  6.90447719e-03,  5.94508308e-03,   4.96903541e-03,  3.97456289e-03,  2.96880587e-03,  1.96330131e-03,   9.57667267e-04, -4.31416947e-05, -1.03761669e-03, -2.00893730e-03,  -2.96329771e-03, -3.89535301e-03, -4.78872095e-03, -5.65712607e-03,  -6.48179628e-03, -7.26492015e-03, -8.00128688e-03, -8.69734664e-03,  -9.33938946e-03, -9.92130147e-03, -1.04506703e-02, -1.09232644e-02,  -1.13420581e-02, -1.16968445e-02, -1.19936614e-02, -1.22320532e-02,  -1.24112045e-02, -1.25226268e-02, -1.25729457e-02, -1.25782907e-02,  -1.25259132e-02, -1.24173320e-02, -1.22593378e-02, -1.20509088e-02,  -1.17875858e-02, -1.14943833e-02, -1.11608712e-02, -1.07902677e-02  };
    DATA_1 imag_in[X] = {1.93467189e-06,  1.03093298e-03,  2.05886190e-03,  3.07912588e-03,   4.07634173e-03,  5.05903123e-03,  6.00814736e-03,  6.94105954e-03,   7.83014614e-03,  8.68282982e-03,  9.48901505e-03,  1.02498323e-02,   1.09627182e-02,  1.16222647e-02,  1.22219883e-02,  1.27650482e-02,   1.32484533e-02,  1.36681133e-02,  1.40271488e-02,  1.43116663e-02,   1.45417610e-02,  1.46958490e-02,  1.47926079e-02,  1.48184378e-02,   1.47853845e-02,  1.46853238e-02,  1.45278028e-02,  1.43097507e-02,   1.40394023e-02,  1.37143984e-02,  1.33362882e-02,  1.29092991e-02,   1.24433803e-02,  1.19356491e-02,  1.13945181e-02,  1.08192796e-02,   1.02143956e-02,  9.58585195e-03,  8.94278873e-03,  8.27825913e-03,   7.61213332e-03,  6.94218923e-03,  6.26595947e-03,  5.58728228e-03,   4.92304013e-03,  4.26810693e-03,  3.62342201e-03,  3.00582442e-03,   2.40514910e-03,  1.82288893e-03,  1.27993794e-03,  7.61911724e-04,   2.72033424e-04, -1.76849048e-04, -5.91772428e-04, -9.68336569e-04,  -1.31283363e-03, -1.60890733e-03, -1.87172696e-03, -2.09150663e-03,  -2.27187543e-03, -2.42239246e-03, -2.53231976e-03, -2.60513716e-03,  -2.64428990e-03, -2.65609093e-03, -2.63127445e-03, -2.58185116e-03,  -2.50722340e-03, -2.41552318e-03, -2.30109687e-03, -2.16832493e-03,  -2.02674465e-03, -1.87689724e-03, -1.72447292e-03, -1.56454777e-03,  -1.41285946e-03, -1.25424779e-03, -1.11284052e-03, -9.80917385e-04,  -8.59065266e-04, -7.62413653e-04, -6.85698987e-04, -6.21241885e-04,  -5.86798348e-04, -5.85728591e-04, -6.06328984e-04, -6.58826751e-04,  -7.43352387e-04, -8.61668374e-04, -1.01743237e-03, -1.19900425e-03,  -1.42193318e-03, -1.67392954e-03, -1.95649229e-03, -2.27590190e-03,  -2.61862363e-03, -3.00069425e-03, -3.39941263e-03, -3.82986045e-03,  -4.27838090e-03, -4.74759177e-03, -5.22972895e-03, -5.72726914e-03,  -6.23526912e-03, -6.74797746e-03, -7.26492625e-03, -7.78143831e-03,  -8.28592446e-03, -8.78148047e-03, -9.26626590e-03, -9.73480717e-03,  -1.01783522e-02, -1.05894005e-02, -1.09818046e-02, -1.13342021e-02,  -1.16541753e-02, -1.19311680e-02, -1.21577758e-02, -1.23380632e-02,  -1.24706987e-02, -1.25564482e-02, -1.25845193e-02, -1.25611343e-02,  -1.24676287e-02, -1.23221354e-02, -1.21202647e-02, -1.18549109e-02,  -1.15287945e-02, -1.11423167e-02, -1.06946797e-02, -1.01936920e-02,  -9.63736247e-03, -9.02523083e-03, -8.35936563e-03, -7.64262042e-03,  -6.88013654e-03, -6.07699225e-03, -5.22819211e-03, -4.34189709e-03,  -3.43345924e-03, -2.48824352e-03, -1.52550600e-03, -5.40240982e-04,   4.52246762e-04,  1.45603013e-03,  2.46607917e-03,  3.47291934e-03,   4.47188804e-03,  5.46392564e-03,  6.43238961e-03,  7.38093185e-03,   8.30124311e-03,  9.18966848e-03,  1.00430914e-02,  1.08523719e-02,   1.16169106e-02,  1.23407267e-02,  1.30067679e-02,  1.36109840e-02,   1.41673609e-02,  1.46536407e-02,  1.50796849e-02,  1.54398093e-02,   1.57323987e-02,  1.59542296e-02,  1.61110607e-02,  1.61950315e-02,   1.62169295e-02,  1.61643252e-02,  1.60440545e-02,  1.58586500e-02,   1.56071230e-02,  1.52940863e-02,  1.49233307e-02,  1.44936377e-02,   1.40082721e-02,  1.34722730e-02,  1.28868250e-02,  1.22589960e-02,   1.15919778e-02,  1.08859401e-02,  1.01579599e-02,  9.39780335e-03,   8.61235115e-03,  7.81752812e-03,  7.00246070e-03,  6.18205874e-03,   5.36783065e-03,  4.54338223e-03,  3.73214150e-03,  2.92859349e-03,   2.14040011e-03,  1.36799018e-03,  6.19756282e-04, -9.73915201e-05,  -7.89190972e-04, -1.44436463e-03, -2.07020754e-03, -2.64759762e-03  };

    DATA_1 ground_th[K] = {17.0, 9.0};
    DATA_1 gold_ref[K] = {17.09096373,  9.0477856 };

	int error_num = 0;
    MATRIX_IN_T xn_input[X];
    DATA_1 xk_output[K];
	axis_in_stream xn_input_strm;
    axis_out_stream xk_output_strm;

	axis_data_in local_write;
    for(int i = 0; i<X; i++) {
        	xn_input[i] = MATRIX_IN_T(real_in[i],imag_in[i]);
        	local_write.data = xn_input[i];
        	local_write.last = ((i==(X-1))?1:0);
            local_write.keep = -1;  
        	xn_input_strm.write(local_write);
        }

    ESPRIT_top(xn_input_strm, xk_output_strm);

    axis_data_out local_read;

    for(int i = 0; i<K; i++){
    	local_read = xk_output_strm.read();
    	xk_output[K-i-1] = local_read.data;
        
    }


	cout << "Ground Truth Velocity: " << ground_th[0] << "  "<< ground_th[1] << endl;
    cout << "Velocity in PS: " << gold_ref[0] << "  "<< gold_ref[1] << endl;
    cout << "Velocity in PL: " << xk_output[0] << "  "<< xk_output[1]  << endl;
    return 0;
}
